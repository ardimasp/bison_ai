Authors,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Manufacturers,Funding Details,Funding Text 1,References,Correspondence Address,Editors,Sponsors,Publisher,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
"Yossy E.H., Karim S., Rachmantyo D.D.","57200167776;57203142515;57220206626;","Development of Indonesian Language Speech Recognition Algorithm Model in Knowledge Database",2020,"7th International Conference on Information Technology, Computer, and Electrical Engineering, ICITACEE 2020 - Proceedings",,, 9239241,"126","129",,,"10.1109/ICITACEE50144.2020.9239241","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097296156&doi=10.1109%2fICITACEE50144.2020.9239241&partnerID=40&md5=4572414646a572bfbd2c57004bbca2e4","Bina Nusantara University, Binus Online Learning, Computer Science Department, Jakarta, 11480, Indonesia","Yossy, E.H., Bina Nusantara University, Binus Online Learning, Computer Science Department, Jakarta, 11480, Indonesia; Karim, S., Bina Nusantara University, Binus Online Learning, Computer Science Department, Jakarta, 11480, Indonesia; Rachmantyo, D.D., Bina Nusantara University, Binus Online Learning, Computer Science Department, Jakarta, 11480, Indonesia","Research on humanoid robots in Indonesia is developing very rapidly, marked by research on humanoid robots having the ability to learn independently using Indonesian and vocabulary to receive and provide responses from humans based on Natural Language Processing. The general objective of research focuses on speech recognition systems to be able to interact with people naturally. Humanoid robots must be able to consider the question style and infer answers through automated, unreliable conversations in noisy environments. In development, there are still shortcomings that is if the answer is not in the knowledge base, the robot will look for the context that is most similar to the knowledge base, instead of giving an answer, the robot gives an answer 'not found'. Sometimes, the wrong answer will be displayed because the cosine value between the question and the wrong answer is influenced by the same context, that the truth is not the actual answer. Based on these problems, this study was conducted with the aim of producing structured data and information knowledge according to the topic of the question, producing knowledge storage designs, optimizing models based on design and knowing the performance of knowledge representation storage models. Based on these objectives, this research will design algorithms and modeling representation of Indonesian language knowledge that will be applied to humanoid robots. The expected output is an algorithm design and storage of knowledge representation on humanoid robots. © 2020 IEEE.","humanoid robot; Indonesian; knowledge representation; question answer","Anthropomorphic robots; Digital storage; Knowledge acquisition; Knowledge based systems; Knowledge representation; Machine design; Modeling languages; Natural language processing systems; Indonesian languages; Knowledge database; Knowledge storage; Model representation; NAtural language processing; Optimizing models; Recognition algorithm; Speech recognition systems; Speech recognition",,,,"Office of Technology Transfer and Procurement

Binus University","ACKNOWLEDGEMENT This work is supported by Research and Technology Transfer Office, Bina Nusantara University as a part of 2019 Grant Binus Applied Research.","Budiharto, W., Cahyani, A.D., Rumondor, P.C.B., Suhartono, D., Edurobot: Intelligent humanoid robot withnatural interaction for education and entertainment (2017) Procedia Comput. Sci, 116, pp. 564-570; Budiharto, W., Cahyani, A.D., Behavior-based humanoid robot for teaching basic mathematics (2017) Internetworking Indones. J, 9 (1), pp. 33-37; Budiharto, W., Santoso Gunawan, A.A., Development of coffee maker service robot using speech and face recognition systems using pomdp (2016) First Int. Work. Pattern Recognit, p. 1001110. , 10011; Perera, V., Veloso, M., (2017) Learning to Understand Questions on the Task History of A Service Robot; Andreas, V., Wulandhari, L.A., Gunawan, A.A.S., Budiharto, W., Anita: Intelligent humanoid robot with self-learning capability using Indonesian language (2019) ACIRS; Budiharto, W., Andreas, V., Gunawan, A.A.S., (2019) Deep Learning-Based Intelligent Humanoid Robot Using Indonesian Language; Sharma, V., Kulkarni, N., Pranavi, S., Bayomi, G., Nyberg, E., Mitamura, T., (2019) BioAMA: Towards An End to End BioMedical Question Answering System, pp. 109-117; Sarrouti, M., Ouatik El Alaoui, S., (2017) A Biomedical Question Answering System in BioASQ 2017, (1), pp. 296-301; Braun, D., Hernandez-Mendez, A., Matthes, F., Langen, M., (2018) Evaluating Natural Language Understanding Services for Conversational Question Answering Systems, pp. 174-185. , August; Thik, Using data mining to predictsecondary school student performance Univ. Minho, 23 (2). , p; Shiang, S.R., Lee, H-Y., Lee, L-S., Spoken question answerin using tree-sttructured conditional random fields and two-layer random walk (2014) Fifteenth Annu. Conf. Int. Speech Communnication Assoc; Unger, C., Forascu, C., Lopez, V., Ngomo, A.-C.N., Cimiano, P., Walter, S., Question answering over linked data (qald-4) (2014) Work. Notes CLEF Conf; Pustejovsky, S.A.J., (2012) Natural Language Annotation for Machine Learning, , Beijing: O'Reilly",,,,"Institute of Electrical and Electronics Engineers Inc.","7th International Conference on Information Technology, Computer, and Electrical Engineering, ICITACEE 2020","24 September 2020 through 25 September 2020",,164776,,9781728172255,,,"English","Int. Conf. Inf. Technol., Comput., Electr. Eng., ICITACEE - Proc.",Conference Paper,"Final","",Scopus,2-s2.0-85097296156
"Meiliana M., Karim S., Warnars H.L.H.S., Gaol F.L., Abdurachman E., Soewito B.","55758663300;57203142515;57219696428;24536664300;56820169100;24473788700;","Software metrics for fault prediction using machine learning approaches: A literature review with PROMISE repository dataset",2018,"2017 IEEE International Conference on Cybernetics and Computational Intelligence, CyberneticsCOM 2017 - Proceedings","2017-November",,,"19","23",,4,"10.1109/CYBERNETICSCOM.2017.8311708","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050694111&doi=10.1109%2fCYBERNETICSCOM.2017.8311708&partnerID=40&md5=3d8df3062311f803f3f341f399bfd277","Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Computer Science Department, BINUS, Bina Nusantara University, Jakarta, 11480, Indonesia; Computer Science Dept., BINUS, Bina Nusantara University, Jakarta, 11480, Indonesia","Meiliana, M., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Karim, S., Computer Science Department, BINUS, Bina Nusantara University, Jakarta, 11480, Indonesia; Warnars, H.L.H.S., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Gaol, F.L., Computer Science Department, BINUS, Bina Nusantara University, Jakarta, 11480, Indonesia; Abdurachman, E., Computer Science Dept., BINUS, Bina Nusantara University, Jakarta, 11480, Indonesia; Soewito, B., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Software testing is an important and critical phase of software development life cycle to find software faults or defects and then correct those faults. However, testing process is a time-consuming activity that requires good planning and a lot of resources. Therefore, technique and methodology for predicting the testing effort is important process prior the testing process to significantly increase efficiency of time, effort and cost usage. Correspond to software metric usage for measuring software quality, software metric can be used to identify the faulty modules in software. Furthermore, implementing machine learning technique will allow computer to 'learn' and able to predict the fault prone modules. Research in this field has become a hot issue for more than ten years ago. However, considering the high importance of software quality with support of machine learning methods development, this research area is still being highlighted until this year. In this paper, a survey of various software metric used for predicting software fault by using machine learning algorithm is examined. According to our review, this is the first study of software fault prediction that focuses to PROMISE repository dataset usage. Some conducted experiments from PROMISE repository dataset are compared to contribute a consensus on what constitute effective software metrics and machine learning method in software fault prediction. © 2017 IEEE.","machine learning algorithm; software defect prediction; Software metric; software testing","Artificial intelligence; Computer software selection and evaluation; Forecasting; Learning systems; Life cycle; Software design; Software testing; Fault-prone modules; Machine learning approaches; Machine learning methods; Machine learning techniques; Software defect prediction; Software development life cycle; Software fault prediction; Software metrices; Learning algorithms",,,,,,"Kumar, L., Krishna, S., Sureka, A., Ku, S., Effective fault prediction model developed using Least (2017) Square Support; Kumudha, P., Venkatesan, R., Cost-sensitive radial basis function neural network classifier for software (2016) Defect Prediction, 2016; Malhotra, R., Jain, A., Fault prediction using statistical and machine learning methods for improving software quality (2012) J. Inf. Process. Syst, 8 (2), pp. 241-262; Olague, H.M., Etzkorn, L.H., Member, S., Gholston, S., Quattlebaum, S., (2007) Empirical Validation of Three Software Metrics Suites to Predict Fault-Proneness of Object-Oriented Classes Developed Using Highly Iterative or Agile Software Development Processes, 33 (6), pp. 402-419; Boetticher, G., Menzies, T., Ostrand, T., (2007) PROMISE Repository of Empirical Software Engineering Data, , West Virginia University Department of Computer Science; Fenton, N.E., Pfleeger, S.L., Software metrics: A rigorous and practical approach (2009) Methods, 5, p. 26; Aggarwal, K.K., Singh, Y., Kaur, A., Malhotra, R., Investigating effect of design metrics on fault proneness in object-oriented systems (2007) J. Object Technol, 6 (10), pp. 127-141; Moser, R., Pedrycz, W., Succi, G., A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction (2008) 2008 ACM/IEEE 30th International Conference on Software Engineering, pp. 181-190. , May IEEE; Nagappan, N., Ball, T., Use of relative code churn measures to predict system defect density (2005) Proceedings. 27th International Conference on Software Engineering 2005. ICSE 2005, pp. 284-292. , May IEEE; Wang, H., (2005) How Many Software Metrics Should Be Selected for Defect Prediction Mi, pp. 69-74; Catal, C., Diri, B., A systematic review of software fault prediction studies (2009) Expert Systems with Applications, 36 (4), pp. 7346-7354; Catal, C., Diri, B., Ozumut, B., An artificial immune system approach for fault prediction in objectoriented software (2007) Dependability of Computer Systems 2007. DepCoS-RELCOMEX'07. 2nd International Conference on, pp. 238-245. , June IEEE; Catal, C., Diri, B., Investigating the effect of dataset size, metrics sets, feature selection techniques on software fault prediction problem (2009) Information Sciences, 179 (8), pp. 1040-1058; Shanthini, A., (2012) Applying Machine Learning for Fault Prediction Using Software Metrics, 2 (6), pp. 274-278; Mundada, D., Murade, A., Vaidya, O., Swathi, J.N., Software fault prediction using artificial neural network and resilient back propagation (2016) Int. J. Comput. Sci. Eng, 5 (3), pp. 173-179; Bishnu, P.S., Bhattacherjee, V., (2012) Software Fault Prediction Using Quad Tree-Based K-Means Clustering Algorithm, 24 (6), pp. 1146-1150; Dejaeger, K., Verbraken, T., Baesens, B., (2013) Prediction Models Using Bayesian Network Classifiers, 39 (2), pp. 237-257; Okutan, A., Taner, O., (2014) Software Defect Prediction Using Bayesian Networks, (2), pp. 154-181; Kumar, L., Rath, S., Sureka, A., (2017) Using Source Code Metrics and Ensemble Methods for Fault Proneness Prediction; Yohannese, C.W., Li, T., (2017) A Combined-Learning Based Framework for Improved Software Fault Prediction, 10, pp. 647-662; Gupta, S., Gupta, D.L., (2017) Fault Prediction Using Metric Threshold Value of Object Oriented Systems, 7 (6), pp. 13629-13643; Erturk, E., Akcapinar, E., Iterative software fault prediction with a hybrid approach (2016) Appl. Soft Comput. J, 49, pp. 1020-1033; Alighardashi, F., Ali, M., Chahooki, Z., (2016) The Effectiveness of the Fused Weighted Filter Feature Selection Method to Improve Software Fault Prediction, (8); Yang, X., Lo, D., Xia, X., Zhang, Y., Sun, J., Deep Learning for Just-In-Time Defect Prediction, (1)",,,"IEEE Indonesia","Institute of Electrical and Electronics Engineers Inc.","2017 IEEE International Conference on Cybernetics and Computational Intelligence, CyberneticsCOM 2017","20 November 2017 through 22 November 2017",,135216,,9781538607831,,,"English","IEEE Int. Conf. Cybern. Comput. Intel., CyberneticsCOM - Proc.",Conference Paper,"Final","",Scopus,2-s2.0-85050694111
"Meiliana, Karim S., Liawatimena S., Trisetyarso A., Abbas B.S., Suparta W.","55758663300;57203142515;48761523700;36337949500;55835973000;24330191400;","Automating functional and structural software size measurement based on XML structure of UML sequence diagram",2018,"2017 IEEE International Conference on Cybernetics and Computational Intelligence, CyberneticsCOM 2017 - Proceedings","2017-November",,,"24","28",,6,"10.1109/CYBERNETICSCOM.2017.8311709","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050668159&doi=10.1109%2fCYBERNETICSCOM.2017.8311709&partnerID=40&md5=0be7dfb9519ce4a6a146dab39b00605c","Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Computer Engineering Department, Faculty of Engineering, Bina Nusantara University, Jakarta, 11480, Indonesia; Computer Science Department, BINUS Graduate Program, Bina Nusantara University, Jakarta, 11480, Indonesia; Industrial Engineering Department, Faculty of Engineering, Bina Nusantara University, Jakarta, 11480, Indonesia; Civil Engineering Department, University of Technology, Yogyakarta, 55285, Indonesia","Meiliana, Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Karim, S., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Liawatimena, S., Computer Engineering Department, Faculty of Engineering, Bina Nusantara University, Jakarta, 11480, Indonesia; Trisetyarso, A., Computer Science Department, BINUS Graduate Program, Bina Nusantara University, Jakarta, 11480, Indonesia; Abbas, B.S., Industrial Engineering Department, Faculty of Engineering, Bina Nusantara University, Jakarta, 11480, Indonesia; Suparta, W., Civil Engineering Department, University of Technology, Yogyakarta, 55285, Indonesia","This research aims to automated software size measurement for both functional and structural view. Software size is used to estimate schedule, effort, cost and other resource in software development process. Therefore, the best method to measure software size is to derive software attributes from requirement artifacts to get early estimation. UML sequence diagram chose as source to extract software function, since this diagram provide high level granularity of function. Functional size is measured by using COSMIC method, while structural size is calculated based on control structure on sequence diagram. To automate the measurement process, XML structure of sequence diagram is analyzed to fit existing functional and structural equation. A well-known case study of rice cooker is used to depict the proposed method in this research. In addition, a simple support tool is provided. © 2017 IEEE.","COSMIC; functional size; sequence point; software size measurement; structural size; UML sequence diagram","Artificial intelligence; Cosmology; XML; COSMIC; Functional size; sequence point; Software size; Structural size; UML sequence diagrams; Software design",,,,,,"Sellami, A., Hakim, H., Abran, A., Ben-Abdallah, H., A measurement method for sizing the structure of UML sequence diagrams (2015) Inf. Softw. Technol, 59, pp. 222-232; Symons, C., Abran, A., Symons, C., (2016) Measurement of Software Size : Advances Made by the COSMIC Community Measurement of Software Size : Advances Made by the COSMIC Community, , no. October; Jayakumar, K.R., Abran, A., (2017) Estimation Models for Software Functional Test Effort, pp. 338-353; Giachetti, G., Pastor, O., Measurement of functional size in conceptual models : A survey of measurement procedures (2008) IWSM/Metrikon/Mensura, 8, pp. 170-183; Condori-Fernández, N., Abrahaõ, S., Pastor, O., (2001) Towards A Functional Size Measure for Object-oriented Systems from Requirements Specifications; Uemura, T., Kusumoto, S., Inoue, K., (2000) Function-point Analysis Using Design Specifications Based on, 243, pp. 223-243. , November 2001; Fehlmann, T.M., Kranich, E., (2011) COSMIC Functional Sizing Based on UML Sequence Diagrams, , MetriKon, Kaiserslautern; Lavazza, L.A., Bianco, V., Garavaglia, C., (2008) Model-based Functional Size Measurement, pp. 100-109; Lavazza, L., Robiolo, G., (2010) Introducing the Evaluation of Complexity in Functional Size Measurement : A UML-based Approach; Dekkers, T., Oudshoorn, R., Functional size measurement applied to UML-based user requirements (2005) Software Measurement European Forum, pp. 69-80; Densumite, S., Muenchaisri, P., Software size estimation using activity point (2017) IOP Conference Series: Materials Science and Engineering, 185 (1), p. 012013. , IOP Publishing; Bagriyanik, S., Karahoca, A., Automated cosmic function point measurement using a requirements engineering ontology (2016) Inf. Softw. Technol, 2015; Rozman, I., Heric, M., (2005) Automated Software Size Estimation Based on Function Points Using UML Models, 47, pp. 881-890; Fraternali, P., Tisi, M., Milano, P., Automating function point analysis with model driven development (2006) Proceedings of the 2006 Conference of the Center for Advanced Studies on Collaborative Research, p. 18. , IBM Corp; Gonultas, R., (2015) Run-time Calculation of COSMIC Functional Size Via Automatic Installment of Measurement Code into Java Business Applications, pp. 112-118; Lavazza, L., Del Bianco, V., A case study in cosmic functional size measurement : the rice cooker revisited (2009) Software Process and Product Measurement, pp. 101-121; Batista, V.A., Peixoto, D.C.C., Borges, E.P., Wilson, P., Resende, R.F., Isa, C.P.S.P., (2011) ReMoFP : A Tool for Counting Function Points from UML Requirement Models, 2011; Septian, M.I., Alianto Daniel, R.S., Gaol, L., Automated test case generation from uml activity diagram and sequence diagram using depth first search algorithm (2017) Procedia Computer Science, 116, pp. 629-637",,,"IEEE Indonesia","Institute of Electrical and Electronics Engineers Inc.","2017 IEEE International Conference on Cybernetics and Computational Intelligence, CyberneticsCOM 2017","20 November 2017 through 22 November 2017",,135216,,9781538607831,,,"English","IEEE Int. Conf. Cybern. Comput. Intel., CyberneticsCOM - Proc.",Conference Paper,"Final","",Scopus,2-s2.0-85050668159
