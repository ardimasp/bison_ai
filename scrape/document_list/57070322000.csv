Authors,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Manufacturers,Funding Details,References,Correspondence Address,Editors,Sponsors,Publisher,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
"Wartika, Gaol F.L., Nugroho A., Abbas B.S.","57070322000;24536664300;24477818100;55835973000;","Application of bayesian regularization algorithm for evaluation of performance software complexity prediction model based on requirement",2019,"International Journal of Recent Technology and Engineering","8","3",,"2530","2535",,,"10.35940/ijrte.C4715.098319","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073501256&doi=10.35940%2fijrte.C4715.098319&partnerID=40&md5=6db051fd625342737b1e46d6ea4d82e2","Binus University, Indonesia; BTPN Bank","Wartika, Binus University, Indonesia; Gaol, F.L., Binus University, Indonesia; Nugroho, A., BTPN Bank; Abbas, B.S., Binus University, Indonesia","Model performance evaluation is a method and process of evaluating the model that has been built. The model that will be evaluated is software complexity prediction model based on requirement. This model allows measuring software complexity before actual design and implementation. The experiment used three datasets namely training dataset, validation data set, and test dataset. For performance evaluation using Mean squared error. Mean squared error is very good at giving a description of how consistent the model is built. By minimizing the value of mean squared error, it means minimizing model variants. Models that have small variants are able to give relatively more consistent results for all input data compared to models with large variants. This research proposes the application of the Bayesian regularization algorithm for evaluating the performance of software complexity prediction model based on requirement. With this research it is expected to know how much the performance of the model that has been built. © BEIESP.","Algorithm; Complexity; Prediction; Software",,,,,,"Liu, X., (1999) Object-Oriented Software Metrics; Na, K., Simpson, J.T., Li, X., Singh, T., Kim, K., (2007) Software Development Risk and Project Performance Measurement: Evidence in Korea, 80, pp. 596-605; Boehm, B., Abts, C., Brown, A., (2000) Cost Estimation with COCOMO II; Keshavarz, G., Modiri, N., Pedram, M., Metric for Early Measurement of Software Complexity (2011) Interfaces (Providence); Arthi, B., Selvarani, A.G., Sathya, A., (2016) Software Complexity Measure from Software Requirements Document and Cost Driver Factors, 24, pp. 6-12; Jakhar, A., Rajnish, K., Measurement Of Complexity And Comprehension Of A Program Through A Cognitive Approach (2015) Int. J. Eng. B; Sellers, B., (1996) Ojbect-Oriented Metrics. Measures of Complexity; Nystedt, S., Sandros, C., Software Complexity and Project Performance (1999) Univ. Gothenbg.; Burden, F., Winkler, D., (2008) Bayesian Regularization of Neural Networks, pp. 23-42; Keshavarz, G., (2011) Metric for Early Measurement of Software Complexity, 3 (6), pp. 2482-2490; Yang, Z., Xie, L., C Z, I.T., On Signal, and Undefined 2013, , ieeexplore.ieee.org, Variational Bayesian algorithm for quantized compressed sensing; Murphy, B., Gent, T., Street, P., (1980) Measuring System and Software Reliability Using an Automated Data Collection Process 2. Changes in System Reliability 2. 1 Changes in Product Reliability, pp. 1-12",,,,"Blue Eyes Intelligence Engineering and Sciences Publication",,,,,22773878,,,,"English","Int. J. Recent Technol. Eng.",Article,"Final","All Open Access, Bronze",Scopus,2-s2.0-85073501256
