Authors,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Manufacturers,Funding Details,Funding Text 1,References,Correspondence Address,Editors,Sponsors,Publisher,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
"Wartika, Gaol F.L., Nugroho A., Abbas B.S.","57070322000;24536664300;24477818100;55835973000;","Application of bayesian regularization algorithm for evaluation of performance software complexity prediction model based on requirement",2019,"International Journal of Recent Technology and Engineering","8","3",,"2530","2535",,,"10.35940/ijrte.C4715.098319","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073501256&doi=10.35940%2fijrte.C4715.098319&partnerID=40&md5=6db051fd625342737b1e46d6ea4d82e2","Binus University, Indonesia; BTPN Bank","Wartika, Binus University, Indonesia; Gaol, F.L., Binus University, Indonesia; Nugroho, A., BTPN Bank; Abbas, B.S., Binus University, Indonesia","Model performance evaluation is a method and process of evaluating the model that has been built. The model that will be evaluated is software complexity prediction model based on requirement. This model allows measuring software complexity before actual design and implementation. The experiment used three datasets namely training dataset, validation data set, and test dataset. For performance evaluation using Mean squared error. Mean squared error is very good at giving a description of how consistent the model is built. By minimizing the value of mean squared error, it means minimizing model variants. Models that have small variants are able to give relatively more consistent results for all input data compared to models with large variants. This research proposes the application of the Bayesian regularization algorithm for evaluating the performance of software complexity prediction model based on requirement. With this research it is expected to know how much the performance of the model that has been built. © BEIESP.","Algorithm; Complexity; Prediction; Software",,,,,,,"Liu, X., (1999) Object-Oriented Software Metrics; Na, K., Simpson, J.T., Li, X., Singh, T., Kim, K., (2007) Software Development Risk and Project Performance Measurement: Evidence in Korea, 80, pp. 596-605; Boehm, B., Abts, C., Brown, A., (2000) Cost Estimation with COCOMO II; Keshavarz, G., Modiri, N., Pedram, M., Metric for Early Measurement of Software Complexity (2011) Interfaces (Providence); Arthi, B., Selvarani, A.G., Sathya, A., (2016) Software Complexity Measure from Software Requirements Document and Cost Driver Factors, 24, pp. 6-12; Jakhar, A., Rajnish, K., Measurement Of Complexity And Comprehension Of A Program Through A Cognitive Approach (2015) Int. J. Eng. B; Sellers, B., (1996) Ojbect-Oriented Metrics. Measures of Complexity; Nystedt, S., Sandros, C., Software Complexity and Project Performance (1999) Univ. Gothenbg.; Burden, F., Winkler, D., (2008) Bayesian Regularization of Neural Networks, pp. 23-42; Keshavarz, G., (2011) Metric for Early Measurement of Software Complexity, 3 (6), pp. 2482-2490; Yang, Z., Xie, L., C Z, I.T., On Signal, and Undefined 2013, , ieeexplore.ieee.org, Variational Bayesian algorithm for quantized compressed sensing; Murphy, B., Gent, T., Street, P., (1980) Measuring System and Software Reliability Using an Automated Data Collection Process 2. Changes in System Reliability 2. 1 Changes in Product Reliability, pp. 1-12",,,,"Blue Eyes Intelligence Engineering and Sciences Publication",,,,,22773878,,,,"English","Int. J. Recent Technol. Eng.",Article,"Final","All Open Access, Bronze",Scopus,2-s2.0-85073501256
"Suharjito, Gunawan H., Thiracitta N., Nugroho A.","55390566600;57192896429;57207734186;24477818100;","Sign Language Recognition Using Modified Convolutional Neural Network Model",2019,"1st 2018 Indonesian Association for Pattern Recognition International Conference, INAPR 2018 - Proceedings",,, 8627014,"1","5",,3,"10.1109/INAPR.2018.8627014","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062787593&doi=10.1109%2fINAPR.2018.8627014&partnerID=40&md5=6d9b9163a299dc8cc5eb1d2d0e55994f","Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Suharjito, Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Gunawan, H., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Thiracitta, N., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Nugroho, A., Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Sign Language is an interesting topic and similar to Action Recognition. Especially along with the great development of Deep Learning. Video-based Sign Language Recognition is our concern because we want to recognize a sign not only by the shape but also by the action the signer does. The problem is sign language is very complex and vary. The variation of sign language is making the system harder to recognize all the words accurately. Many researchers have been researching Sign Language Recognition for a long time. So many methods had been used to find out which one is the best method. Because of similarity between Sign Language Recognition and Action Recognition, we are trying to implement one of the top-tier models in Action Recognition which is i3d inception this model is also a new Action Recognition model with very high accuracy. So we can know is it possible to adopt Action Recognition behavior into Sign Language Recognition. The goal of this paper is to implement the i3d inception model to Sign Language Recognition with transfer learning method. From the test we've been done, we got 100% accuracy on training with 10 words and 10 signers with 100 classes but the validation accuracy is pretty low. This model is too overfit. © 2018 IEEE.","comparation; convolutional neural network; deep learning; recognition; sign language","Behavioral research; Convolution; Deep learning; Neural networks; Action recognition; comparation; Convolutional neural network; High-accuracy; recognition; Sign language; Sign Language recognition; Transfer learning methods; Pattern recognition",,,,,"This research was supported by Research Grant No. 036/CR.RTT/IV/2018from Ministry of Research Technology and Higher Education of Republic of Indonesia.","(2018) Deaf Cambridge Dictionary, , https://dictionary.cambridge.org/dictionary/english/deaf, Retrieved from Cambridge Dictionary; Deng, J., Dong, W., Socher, R., Li, L.-J., Li, K., Fei-Fei, L., Imagenet: A large-scale hierarchical image database (2009) Computer Vision and Pattern Recognition, 2009. CVPR 2009. IEEE Conference On, pp. 248-255. , IEEE. Miami, FL, USA; Escalera, S., Baró, X., Gonzàlez, J., Bautista, M., Madadi, M., Reyes, M., Guyon, I., Chalearn looking at people challenge 2014: Dataset and results (2014) Workshop at the European Conference on Computer Vision, pp. 459-473. , Springer, Cham; Feichtenhofer, C., Pinz, A., Wildes, R.P., Spatiotemporal residual networks for video action recognition (2016) Advances in Neural Information Processing Systems, pp. 3468-3476; Huang, J., Zhou, W., Li, H., Sign language recognition using 3d convolutional neural networks (2015) IEEE International Conference on Multimedia and Expo (ICME), pp. 1-6. , Turin: IEEE; Jaoa Carriera, A.Z., Quo vadis, action recognition? A new model and the kinetics dataset (2018) Computer Vision and Pattern Recognition (CVPR), 2017 IEEE Conference On, pp. 4724-4733. , IEEE. Honolulu; Kay, W., Carriera, J., Simonyan, K., Zhang, B., Hillier, C., Vijayanarasimhan, S., Zisserman, A., (2017) The Kinetics Human Action Video Dataset. Computer Vision and Pattern Recognition, pp. 1-22; Pigou, L., Dieleman, S., Kindermans, P.-J., Schrauwen, B., Sign language recognition using convolutional neural networks (2014) Workshop at the European Conference on Computer Vision, pp. 572-578. , Springer, Cham. (pp. 572-578). Springer Link; Ronchetti, F., Estrebou, C.A., Lanzarini, L.C., Rosete, A., (2016) LSA64: An Argentinian Sign Language Dataset. XIII Workshop Bases de Datos y Minería de Datos (WBDMD), pp. 794-803; Suharjito, A.R., Wiryana, F., Ariesta, M.C., Kusuma, G.P., Sign language recognition application systems for deaf-mute people: A review based on input-process-output (2017) 2nd International Conference on Computer Science and Computational Intelligence, , Bali; Szegedy, C., Liu, W., Jia, Y., Sermanet, P., Reed, S.E., Anguelov, D., Rabinovich, A., Going deeper with convolutions (2015) Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 1-9. , (pp. 1-9). IEEE; Soomro, K., Zamir, A.R., Shah, M., (2012) UCF101: A Dataset of 101 Human Actions Classes from Videos in the Wild. Computer Vision and Pattern Recognition, pp. 1-7; Kuehne, H., Jhuang, H., Garrote, E., Poggio, T., Serre, T., HMDB: A large video database for human motion recognition (2011) Computer Vision (ICCV), 2011 IEEE International Conference On, pp. 2556-2563. , IEEE; Tran, D., Bourdev, L., Fergus, R., Torresani, L., Paluri, M., Learning spatiotemporal features with 3d convolutional networks (2015) International Conference on Computer Vision, pp. 4489-4497. , Las Condes: IEEE; Feichtenhofer, C., Pinz, A., Zisserman, A., Convolutional two-stream network fusion for video action recognition (2016) Compoter Vision and Pattern Recognition, pp. 1933-1941. , Las Vegas Valley: IEEE",,,,"Institute of Electrical and Electronics Engineers Inc.","1st Indonesian Association for Pattern Recognition International Conference, INAPR 2018","7 September 2018 through 8 September 2018",,144686,,9781538694220,,,"English","Indones. Assoc. Pattern Recognit. Int. Conf., INAPR - Proc.",Conference Paper,"Final","",Scopus,2-s2.0-85062787593
"Lukmanto R.B., Suharjito, Nugroho A., Akbar H.","56979380800;55390566600;24477818100;25926911100;","Early detection of diabetes mellitus using feature selection and fuzzy support vector machine",2019,"Procedia Computer Science","157",,,"46","54",,4,"10.1016/j.procs.2019.08.140","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073113001&doi=10.1016%2fj.procs.2019.08.140&partnerID=40&md5=d4445aff412eb6157429734fdb0ad210","Computer Science Department, Binus Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Lukmanto, R.B., Computer Science Department, Binus Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Suharjito, Computer Science Department, Binus Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Nugroho, A., Computer Science Department, Binus Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Akbar, H., Computer Science Department, Binus Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","The number of patients that were infected by Diabetes Mellitus (DM) has reached 415 million patients in 2015 and by 2040 this number is expected to increase to approximately 642 million patients. Large amount of medical data of DM patients is available and it provides significant advantage for researchers to fight against DM. The main objective of this research is to leverage F-Score Feature Selection and Fuzzy Support Vector Machine in classifying and detecting DM. Feature selection is used to identify the valuable features in dataset. SVM is then used to train the dataset to generate the fuzzy rules and Fuzzy inference process is finally used to classify the output. The aforementioned methodology is applied to the Pima Indian Diabetes (PID) dataset. The results show a promising accuracy of 89.02% in predicting patients with DM. Additionally, the approach taken provides an optimized count of Fuzzy rules while still maintaining sufficient accuracy. © 2019 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/) Peer-review under responsibility of the scientific committee of the 4th International Conference on Computer Science and Computational Intelligence 2019.","Diabetes Mellitus; Feature Selection; Fuzzy Logic; Support Vector Machine","Artificial intelligence; Classification (of information); Feature extraction; Fuzzy logic; Fuzzy rules; Support vector machines; Diabetes mellitus; F-score; Fuzzy support vector machines; Inference process; Large amounts; Medical data; Pima Indian Diabetes; Fuzzy inference",,,,,,"(2015) Diabetes Atlas 7th Edition; Kaul, K., Tarr, J.M., Ahmad, S.I., Kohner, E.M., Chibber, R., Introduction to diabetes mellitus (2013) Diabetes, pp. 1-11; Lukmanto, R.B., Irwansyah, E., The early detection of diabetes mellitus (DM) using fuzzy hierarchical model (2015) Procedia Computer Science, pp. 312-319. , Jakarta: Elsevier; Sanz, J.A., Galar, M., Jurio, A., Brugos, A., Pagola, M., Bustince, H., Medical diagnosis of cardiovascular diseases using an intervalvalued (2014) Applied Soft Computing, pp. 103-111; Nguyen, T., Khosravi, A., Creighton, D., Nahavandi, S., Classification of healthcare data using genetic fuzzy logic system and wavelets (2015) Expert Systems with Applications, pp. 2184-2197; Zhu, J., Xie, Q., Zheng, K., An improved early detection method of type-2 diabetes mellitus using multiple classifier system (2015) Information Sciences, pp. 1-14; Ding, S., Feature selection based F-score and ACO algorithm in support vector machine (2009) Knowledge Acquisition and Modeling, pp. 19-23; Maldonado, S., Pérez, J., Weber, R., Labbé, M., Feature selection for support vector machines via mixed integer linear programming (2014) Information Sciences, pp. 163-175; Abe, S., Fuzzy support vector machines for multilabel classification (2015) Pattern Recognition, pp. 2110-2117; Xie, S., Li, Z., Hu, H., Protein secondary structure prediction based on the fuzzy support vector machine with the hyperplane optimization (2018) Gene, pp. 74-83; Beloufa, F., Chikh, M.A., Design of fuzzy classifier for diabetes disease using Modified Artificial Bee Colony algorithm (2013) Computer Methods and Programs in Biomedicine, pp. 92-103; Wang, C., Li, L., Wang, L., Ping, Z., Flory, M.T., Wang, G., Evaluating the risk of type 2 diabetes mellitus using artificial neural network: An effective classification approach (2013) Diabetes Research and Clinical Practice, pp. 111-118; Varma, K.V., Rao, A.A., Lakshmi, T.S.M., Rao, P.N., A computational intelligence approach for a better diagnosis of diabetic patients (2014) Computers & Electrical Engineering, pp. 1758-1765; Kandhasamy, J.P., Balamurali, S., Performance analysis of classifier models to predict diabetes mellitus (2015) Rocedia Computer Science, pp. 45-51; Hayashi, Y., Yukita, S., Rule extraction using Recursive-Rule extraction algorithm with J48graft combined with sampling selection techniques for the diagnosis of type 2 diabetes mellitus in the Pima Indian dataset (2016) Informatics in Medicine Unlocked, pp. 92-104; Zheng, T., Xie, W., Xu, L., He, X., Zhang, Y., You, M., A machine learning-based framework to identify type 2 diabetes through electronic health records (2017) Nternational Journal of Medical Informatics, pp. 120-127; Kumar, A., Sharmila, D.J.S., Singh, S., SVMRFE based approach for prediction of most discriminatory gene target for type II diabetes (2017) Genomics Data, pp. 28-37; Barkana, B.D., Saricicek, I., Yildirim, B., Performance analysis of descriptive statistical features in retinal vessel segmentation via fuzzy logic, ANN, SVM, and classifier fusion (2017) Knowledge-Based Systems, pp. 165-176; Ding, S., Feature selection based F-score and ACO algorithm in support vector machine (2009) Second International Symposium on Knowledge Acquisition and Modeling, , Wuhan: IEEE; Polat, K., Güneş, S., Artificial immune recognition system with fuzzy resource allocation mechanism classifier, principal component analysis and FFT method based new hybrid automated identification system for classification of EEG signals (2008) Expert Systems with Applications, pp. 2039-2048; Kahramanli, H., Allahverdi, N., Design of a hybrid system for the diabetes and heart diseases (2008) Expert Systems with Applications, pp. 82-89; Luukka, P., Feature selection using fuzzy entropy measures with similarity classifier (2011) Expert Systems with Applications, pp. 4600-4607; Ding, S., Zhao, H., Zhang, Y., Xu, X., Nie, R., Extreme learning machine: Algorithm, theory and applications (2015) Artificial Intelligence Review, pp. 103-115; Feng, T.C., Li, T.H.S., Kuo, P.H., Variable coded hierarchical fuzzy classification model using DNA coding and evolutionary programming (2015) Applied Mathematical Modelling, pp. 7401-7419; Song, Q., Jiang, H., Liu, J., Feature selection based on FDA and F-score for multi-class classification (2017) Expert Systems with Applications","Suharjito; Computer Science Department, Indonesia; email: suharjito@binus.edu","Budiharto W.",,"Elsevier B.V.","4th International Conference on Computer Science and Computational Intelligence, ICCSCI 2019","12 September 2019 through 13 September 2019",,152141,18770509,,,,"English","Procedia Comput. Sci.",Conference Paper,"Final","All Open Access, Gold",Scopus,2-s2.0-85073113001
"Ghozali R.P., Saputra H., Apriadin Nuriawan M., Suharjito, Utama D.N., Nugroho A.","57207729102;57207729423;57211240630;55390566600;55016662200;24477818100;","Systematic literature review on decision-making of requirement engineering from agile software development",2019,"Procedia Computer Science","157",,,"274","281",,4,"10.1016/j.procs.2019.08.167","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073100858&doi=10.1016%2fj.procs.2019.08.167&partnerID=40&md5=831b84381efe6a05235c02c91b0db7df","Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Ghozali, R.P., Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Saputra, H., Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Apriadin Nuriawan, M., Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Suharjito, Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Utama, D.N., Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Nugroho, A., Computer Science Department, BINUS Graduate Program - Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","This paper presents a systematic literature review of agile software development at decision making method for requirement engineering. Presently, agile software development method is operated to cope with requirements that changes dynamically. This study seeks to find out and discuss what types of method that have been exploited for decision making on managing feasible requirements and challenges of decision making in agile software development. Papers reviewed in this study are published from 2017 to present. Resulting 8 papers that have been identified of presenting decision making methods. Using these papers, 11 methods and 7 challenges of decision making identified. This study contributes a review of requirement management and engineering by providing decision making methods on agile software development and the challenges of decision making for requirement engineering. © 2019 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/) Peer-review under responsibility of the scientific committee of the 4th International Conference on Computer Science and Computational Intelligence 2019.","Agile Software Development; Decision Making; Requirement Engineering; Systematic Literature Review","Artificial intelligence; Computer software; Software design; Agile software development; Decision-making method; Requirement engineering; Requirement management; Systematic literature review; Decision making",,,,,,"Ebert, C., 50 years of software engineering: Progress and perils (2018) IEEE Software, 35 (5), pp. 94-101; Anu, V., Hu, W., Carver, J.C., Walia, G.S., Bradshaw, G., Development of a human error taxonomy for software requirements: A systematic literature review (2018) Information and Software Technology, 103, pp. 112-124; Maalej, W., Nayebi, M., Johann, T., Ruhe, G., Toward data-driven requirements engineering (2016) IEEE Software, 33 (1), pp. 48-54; Lappi, T., Karvonen, T., Lwakatare, L.E., Aaltonen, K., Kuvaja, P., Toward an improved understanding of agile project governance: A systematic literature review (2018) Project Management Journal, 49 (6), pp. 39-63; Kupiainen, E., Mäntylä, M.V., Itkonen, J., Using metrics in Agile and Lean Software Development-A systematic literature review of industrial studies (2015) Information and Software Technology, 62, pp. 143-163; Al-Ta'Ani, R.H., Razali, R., Prioritizing requirements in agile development: A conceptual framework (2013) Procedia Technology, 11, pp. 733-739; Hess, A., Diebold, P., Seyff, N., Understanding information needs of agile teams to improve requirements communication (2019) Journal of Industrial Information Integration, 14, pp. 3-15; Hoda, R., Salleh, N., Grundy, J., Tee, H.M., Systematic literature reviews in agile software development: A tertiary study (2017) Information and Software Technology, 85, pp. 60-70; Pezeshki, Z., Soleimani, A., Darabi, A., Application of BEM and using BIM database for BEM: A review (2019) Journal of Building Engineering, 23, pp. 1-17; Rijal, P., Uprety, D., W382 material mortality: A 3 years retrospective review from eastern Nepal (2012) Obstetrics, 119 (3), p. S828; Schön, E.M., Thomaschewski, J., Escalona, M.J., Agile requirements engineering: A systematic literature review (2017) Computer Standards & Interfaces, 49, pp. 79-91; De Melo França, V.J., Balancieri, R., Leal, G.C.L., Rouiller, A.C., Mixed Integer Programming helping Requirements Allocation for the NRP in SCRUM Teams (2018) Proceedings of the 17th Brazilian Symposium on Software Quality, pp. 279-286. , Curitiba, Brazil: ACM; Liaskos, S., Dundjerovic, T., Gabriel, G., Comparing alternative goal model visualizations for decision making: An exploratory experiment (2018) Proceedings of the 33rd Annual ACM Symposium on Applied Computing, pp. 1272-1281. , Pau, France: ACM; Kleebaum, A., Johanssen, J.O., Paech, B., Alkadhi, R., Bruegge, B., Decision knowledge triggers in continuous software engineering (2018) Proceedings of the 4th International Workshop on Rapid Continuous Software Engineering, pp. 23-26. , Gothenburg, Sweden: ACM; Tharayil, R., Change vector tracking in emergent design (2018) Proceedings of the 11th Innovations in Software Engineering Conference, , Hyderabad, India: ACM; Asghar, A.R., Tabassum, A., Bhatti, S.N., Jadi, A.M., Impact and challenges of requirements elicitation (2017) 2017 International Conference on Communication Technologies (ComTech), pp. 50-55. , Rawalpindi, Pakistan: IEEE; Sachdeva, S., Arya, A., Paygude, P., Chaudhary, S., Idate, S., Prioritizing user requirements for agile software development (2018) 2018 International Conference on Advances in Communication and Computing Technology (ICACCT), pp. 495-498. , Sangamner, India: IEEE; Sheemar, H., Kour, G., Enhancing user-stories prioritization process in agile environment (2017) 2017 International Conference on Innovations in Control, Communication and Information Systems (ICICCI), pp. 1-6. , Greater Noida, India: IEEE; Taibi, D., Lenarduzzi, V., Janes, A., Liukkunen, K., Ahmad, M.O., Comparing requirements decomposition within the scrum, scrum with kanban, XP, and banana development processes (2017) International Conference on Agile Software Development, pp. 68-83; Schön, E.M., Winter, D., Escalona, M.J., Thomaschewski, J., Key challenges in agile requirements engineering (2017) International Conference on Agile Software Development, pp. 37-51. , Springer, Cham; Mattos, D.I., Bosch, J., Olsson, H.H., Challenges and strategies for undertaking continuous experimentation to embedded systems: Industry and research perspectives (2018) International Conference on Agile Software Development, pp. 277-292. , Springer, Cham","Utama, D.N.; Computer Science Department, Indonesia; email: ditdit.utama@binus.edu","Budiharto W.",,"Elsevier B.V.","4th International Conference on Computer Science and Computational Intelligence, ICCSCI 2019","12 September 2019 through 13 September 2019",,152141,18770509,,,,"English","Procedia Comput. Sci.",Conference Paper,"Final","All Open Access, Gold",Scopus,2-s2.0-85073100858
"Al Faris F.Z., Suharjito, Diana, Nugroho A.","57205460756;55390566600;57193808772;24477818100;","Development of Data Warehouse to Improve Services in IT Services Company",2018,"Proceedings of 2018 International Conference on Information Management and Technology, ICIMTech 2018",,, 8528146,"483","488",,1,"10.1109/ICIMTech.2018.8528146","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85058320546&doi=10.1109%2fICIMTech.2018.8528146&partnerID=40&md5=6383b291f298b72bf3f049665d5660e9","Computer Science Department, Bina Nusantara University, BINUS Graduate Program-Master of Computer Science, Jakarta, 11480, Indonesia","Al Faris, F.Z., Computer Science Department, Bina Nusantara University, BINUS Graduate Program-Master of Computer Science, Jakarta, 11480, Indonesia; Suharjito, Computer Science Department, Bina Nusantara University, BINUS Graduate Program-Master of Computer Science, Jakarta, 11480, Indonesia; Diana, Computer Science Department, Bina Nusantara University, BINUS Graduate Program-Master of Computer Science, Jakarta, 11480, Indonesia; Nugroho, A., Computer Science Department, Bina Nusantara University, BINUS Graduate Program-Master of Computer Science, Jakarta, 11480, Indonesia","On time service delivery is one of the ultimate goal of IT services company. The aim of this study is developing data warehouse to help company keeping up the delivery service time is always on target. This study starts with identifying the problem, data collection, literature study, then develop the data warehouse, making analysis with OLAP, build report and dashboard as needed, and at last evaluation of data warehouse already developed. Extract Transform Load process (ETL) transferred data from operational database to data warehouse. OLAP analysis features in data warehouse can help company to analyse information from multidimensional data; report and dashboard build from information in the data warehouse can help sales team to know what best strategy and making decision. As the result, data warehouse that has been built can help sales team deliver the services on time to their customers. © 2018 IEEE.","dashboard; data warehouse; decision making; ETL; kimball methodology; OLAP; pentaho; report","Decision making; Information management; Sales; dashboard; kimball methodology; OLAP; pentaho; report; Data warehouses",,,,,,"Kimball, R., Ross, M., (2013) The Data Warehouse Toolkit : The Definitive Guide to Dimensional Modelling Third Edition, Indianapolis: John, , Wiley & Sons, Inc; Khan, A., Ehsan, N., Mirza, E., Sarwar, S.Z., Integration between customer relationship management (CRM) and Data Warehousing (2012) Procedia Technology, 1, pp. 239-249; Pardillo, J., Mazon, J.N., Trujillo, J., Extending OCL for OLAP querying on conceptual multidimensional (2010) Information Science, 180 (5), pp. 584-601; Paskarina, S., Ayub, M., Aplikasi analisis data kesehatan dengan memanfaatkan teknologi olap untuk departemen Kesehatan PT. Ateja Multi Industri (2010) Jurnal Informatika, 6 (2), pp. 119-130; Dash, S., Mishra, S., Implementation of data warehousing in online sales company (2013) International Journal of Computer Trends and Technology (IJCTT), 4 (7), pp. 2330-2334; Prihatin, N., Perancangan data warehouse calon mahasiswa baru politeknik negeri lhokseumawe (2013) Jurnal Litek, pp. 62-66; He, X.J., Sheu, M., Data warehousing for supply chain management with case analysis (2006) International Journal and Enterprise Development, 3 (5), pp. 438-452; Kimball, R., Ross, M., (2016) The Kimball Group Reader: Relentlessly Practical Tools for Data Warehousing and Business Intelligence, Second Edition, , Indinianapolis, IN: John Wiley & Sons, Inc",,,"BINUS University;IEEE Indonesia Section","Institute of Electrical and Electronics Engineers Inc.","3rd International Conference on Information Management and Technology, ICIMTech 2018","3 September 2018 through 5 September 2018",,142373,,9781538658215,,,"English","Proc. Int. Conf. Inf. Manag. Technol., ICIMTech",Conference Paper,"Final","",Scopus,2-s2.0-85058320546
"Purawinata W.M., Gaol F.L., Nugroho A., Abbas B.S.","57203159364;24536664300;24477818100;55835973000;","The prediction of software complexity based on complexity requirement using artificial neural network",2018,"2017 IEEE International Conference on Cybernetics and Computational Intelligence, CyberneticsCOM 2017 - Proceedings","2017-November",,,"73","78",,1,"10.1109/CYBERNETICSCOM.2017.8311687","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050754185&doi=10.1109%2fCYBERNETICSCOM.2017.8311687&partnerID=40&md5=1705c92f7bae16de059dd206271698e6","Faculty of Engineering and Computer Science, Indonesian Computer University, Bandung, 40132, Indonesia; Computer Science Department, BINUS Graduate, Program - Doctor of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Industrial Engineering Department, Faculty of Engineering, Bina Nusantara University, Jakarta, 11480, Indonesia","Purawinata, W.M., Faculty of Engineering and Computer Science, Indonesian Computer University, Bandung, 40132, Indonesia, Computer Science Department, BINUS Graduate, Program - Doctor of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Gaol, F.L., Faculty of Engineering and Computer Science, Indonesian Computer University, Bandung, 40132, Indonesia, Computer Science Department, BINUS Graduate, Program - Doctor of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Nugroho, A., Computer Science Department, BINUS Graduate, Program - Doctor of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Abbas, B.S., Industrial Engineering Department, Faculty of Engineering, Bina Nusantara University, Jakarta, 11480, Indonesia","In the recent years, the productivity of software has grown in size, complexity, and also cost. As that software productivity growth, several problems has been appeared in software project management especially that correlated to complexity. One of complexity factors is requirement. A unit of requirement used as an option to the design phase of product development. The requirement is also a main option in verification process. So the the requirement complexity in this research is used as parameter to predict the software complexity. Because of the data pattern to connect between the requirement and the complexity is complex. So that this paper attempt to make a connectivity model between requirement complexity and prediction complexity of software using artificial neural network method with Levenberg Marquadt and Bayesian Regulation algorithm. So it can be seen comparison of experimental results by using the two algorithms. © 2017 IEEE.","artificial neural network; complexity; prediction; requirement; software","Computer software; Forecasting; Neural networks; Product design; Productivity; Project management; Software engineering; Artificial neural network methods; Bayesian regulation; complexity; requirement; Software complexity; Software productivity; Software project management; Verification process; Complex networks",,,,,,"Liu, X., (1999) Object-oriented Software Metrics; Na, K., Simpson, J.T., Li, X., Singh, T., Kim, K., Software development risk and project performance measurement (2007) Evidence in Korea, 80, pp. 596-605; Boehm, B., Abts, C., Brown, A., (2000) Cost Estimation with COCOMO II, Ed: Upper Saddle ...; Keshavarz, G., Modiri, N., Pedram, M., Metric for early measurement of software complexity (2011) Interfaces; West, A., Nasa study on flight software complexity (2009) Final Report. Technical Report, NASA; Arthi, B., Selvarani, A.G., Sathya, A., (2016) Software Complexity Measure from Software Requirements Document and Cost Driver Factors, 24, pp. 6-12; Pressman, R., (2005) Software Engineering: A Practitioner's Approach; Sellers, B., (1996) Ojbect-oriented Metrics. Measures of Complexity; Nystedt, S., Sandros, C., Software complexity and project performance (1999) University of Gothenburg; Sharma, A., Singh, D., Estimation of software development effort from requirements based complexity (2012) Procedia Technology, 4, pp. 716-722; Keshavarz, G., (2011) Metric for Early Measurement of Software Complexity, 3 (6), pp. 2482-2490; Negnevitsky, M., (2005) Artificial Intelligence: A Guide to Intelligent Systems; Zadeh, L., Soft computing and fuzzy logic (1994) IEEE Software; Sharma, A., Kushwaha, D.S., (2010) A Complexity Measure Based on Requirement Engineering Document, 1 (1), pp. 112-117; Warnars, H.L.H.S., Object oriented modeling with unified modelling language 2.0 for simple software application based on agile methodology (2011) Behaviour & Information Technology An International Journal, 30 (3), pp. 293-307",,,"IEEE Indonesia","Institute of Electrical and Electronics Engineers Inc.","2017 IEEE International Conference on Cybernetics and Computational Intelligence, CyberneticsCOM 2017","20 November 2017 through 22 November 2017",,135216,,9781538607831,,,"English","IEEE Int. Conf. Cybern. Comput. Intel., CyberneticsCOM - Proc.",Conference Paper,"Final","All Open Access, Green",Scopus,2-s2.0-85050754185
"Satya Hermanto R.P., Suharjito, Diana, Nugroho A.","57203838172;55390566600;57193808772;24477818100;","Waiting-Time Estimation in Bank Customer Queues using RPROP Neural Networks",2018,"Procedia Computer Science","135",,,"35","42",,4,"10.1016/j.procs.2018.08.147","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85053122690&doi=10.1016%2fj.procs.2018.08.147&partnerID=40&md5=04baccd3a62b0fffbb92c4d281bf9d4b","Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Satya Hermanto, R.P., Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Suharjito, Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Diana, Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Nugroho, A., Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","In daily banking customer queues, unknown waiting-time could lower customer experience. Little's Law formula in Queue Theory provides a generic formula for waiting-time, but it cannot be implemented directly to give finite wait-time estimation in real-life. This study aims to investigate predictive variables that explain waiting-time duration. This paper uses Fast Artificial Neural Network engine to implement Artificial Neural Networks method. To train Artificial Neural Networks, Resilient Propagation was used. Time-series approach and structural approach for input neuron was compared. Average duration from previous interval and number of server was proposed to increase structural variable like Queue Length and Head of Line Duration estimator variable. To determine the best configuration for number of neuron in input and hidden layer, experimental method was used. The results of this study show that structural approach provides better estimation than time-series approach. Furthermore, modified helper variable combination provides a more refined result. © 2018 The Authors. Published by Elsevier Ltd.","estimation; neural networks; queue; time-series; waiting-time","Computation theory; Estimation; Queueing theory; Sales; Time series; Banking customers; Customer experience; Experimental methods; Predictive variables; queue; Resilient propagation; Structural approach; Waiting-time; Neural networks",,,,,,"Jensen, K.B., (2011) The Psychology of Waiting, , Best Practices Inc; Patel, J.J., Chaudhary, R.M., Patel, P.A., Makwana, P., Minimize the Waiting Time of Customer and Gain more Profit in Restaurant using Queuing Model (2012) International Journal of Engineering Research and Applications (IJERA), 2 (3), pp. 1422-1425; Bulut, M.F., Yilmaz, Y.S., Demirbas, M., Ferhatosmanoglu, N., Ferhatosmanoglu, H., Lineking: Coffee shop wait-time monitoring using smartphones (2015) IEEE Transactions on Mobile Computing, 14, pp. 2045-2058; Kim, S.H., Whitt, W., Estimating Waiting Times with the Time-Varying Little's Law (2013) Probability in the Engineering and Informational Sciences, 27 (4), pp. 471-506; Ibrahim, R., Whitt, W., Wait-Time Predictors for Customer Service Systems with Time-Varying Demand and Capacity (2011) Operations Research, 59 (5), pp. 1106-1118; Guresen, E., Kayakutlu, G., Daim, T.U., Using Artificial Neural Network Models in Stock Market Index Prediction (2011) Expert Systems with Applications, 38 (8), pp. 10389-10397; De Oliveira, F.A., Nobre, C.N., Zárate, L.E., Applying Artificial Neural Networks to prediction of stock price and improvement of the directional prediction index-Case study of PETR4 (2013) Petrobras, Brazil, 40, pp. 7596-7606; Maliki, O.S., Agbo, A.O., Maliki, A.O., Ibeh, L.M., Agwu, C.O., Comparison of Regression Model and Artificial Neural Network Model for the Prediction of Electrical Power Generated in Nigeria (2011) Advances in Applied Science Research, 2 (5), pp. 329-339; Súarez Rr Graff, M., Modeling ANNs Performance on Time Series Forecasting. Power, Electronics and Computing (ROPEC) (2013) 2013 IEEE International Autumn Meeting, pp. 1-6; Carvalho, R.S., Carvalho, R.N., Ramos, G.N., Mouro, R.N., Predicting Waiting Time Overflow on Bank Teller Queues (2017) 16th IEEE International Conference on Machine Learning and Applications (ICMLA), pp. 842-847. , Mexico: IEEE; Nissen, S., (2003) Implementation of a Fast Artificial Neural Network Library (FANN), 31, p. 29. , Report, Department of Computer Science University of Copenhagen (DIKU); Riedmiller, M., Braun, H., A Direct Adaptive Method for Faster Backpropagation Learning: The RPROP Algorithm. in Neural Networks (1993) IEEE International Conference On; 1993: IEEE, pp. 586-591; Hamzaçebi, C., Akay, D., Kutay, F., Comparison of direct and iterative artificial neural network forecast approaches in multi-periodic time series forecasting (2009) Expert Systems with Applications, 36 (2), pp. 3839-3844; Valipour, M., Banihabib, M.E., Behbahani, S.M.R., Comparison of the ARMA (2013) ARIMA, and the Autoregressive Artificial Neural Network Models in Forecasting the Monthly Inflow of Dez Dam Reservoir. Journal of Hydrology, pp. 433-441; Panchal, F.S., Panchal, M., Review on Methods of Selecting Number of Hidden Nodes in Artificial Neural Network (2014) International Journal of Computer Science and Mobile Computing, 3 (11), pp. 455-464","Suharjito; Computer Science Department, Indonesia; email: suharjito@binus.edu","MeilianaArifin Y.Budiharto W.Wulandhari L.A.Sutoyo R.FaisalGunawan A.A.S.WilliemSuryani D.",,"Elsevier B.V.","3rd International Conference on Computer Science and Computational Intelligence, ICCSCI 2018","7 September 2018 through 8 September 2018",,138963,18770509,,,,"English","Procedia Comput. Sci.",Conference Paper,"Final","All Open Access, Gold",Scopus,2-s2.0-85053122690
"Suharjito, Diana, Yulyanto, Nugroho A.","55390566600;57193808772;57200162548;24477818100;","Mobile Expert System Using Fuzzy Tsukamoto for Diagnosing Cattle Disease",2017,"Procedia Computer Science","116",,,"27","36",,7,"10.1016/j.procs.2017.10.005","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85039997680&doi=10.1016%2fj.procs.2017.10.005&partnerID=40&md5=b4300de80d01d5f7fb4cf5e3bce9a595","Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jl kebon jeruk RayaNo 27, Jakarta, 11480, Indonesia; Computer Science Department, School of Computer Science, Bina Nusantara University, Jl KH Syahdan 9, Jakarta, 11480, Indonesia","Suharjito, Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jl kebon jeruk RayaNo 27, Jakarta, 11480, Indonesia; Diana, Computer Science Department, School of Computer Science, Bina Nusantara University, Jl KH Syahdan 9, Jakarta, 11480, Indonesia; Yulyanto, Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jl kebon jeruk RayaNo 27, Jakarta, 11480, Indonesia; Nugroho, A., Computer Science Department, BINUS Graduate Program, Master of Computer Science, Bina Nusantara University, Jl kebon jeruk RayaNo 27, Jakarta, 11480, Indonesia","Handling reproductive disorders in the cattle farming businesses is still ineffective due to a lack of information about the treatment of cattle, which has led to a significant decline in meat production. To reduce the impact of reproductive disease, it is necessary to perform detection and early treatment to prevent significant losses and a wider spread of the disease. This article explains the application of an expert system that provides a means of consultation imitating the reasoning process of an expert in solving complex problems concerning the health of cows reproduction. We will apply Fuzzy Tsukamoto method to help diagnose the level of risk of disease in cattle based on six clinical symptoms. The result of this research is a mobile expert system that will conclude the level of risk of endometritis disease in cattle. This mobile application is developed based on android, for ease of use, and can be used by farmers in making the diagnosis by themselves. The validation results of this expert system show that the system is able to determine the level of risk of endometritis for cow's reproduction disease. © 2017 The Authors. Published by Elsevier B.V.","cattle disease; Expert system; fuzzy logic tsukamoto","Artificial intelligence; Computation theory; Expert systems; Fuzzy logic; Cattle disease; Clinical symptoms; Complex problems; Fuzzy tsukamoto; Mobile applications; Reasoning process; Reproductive disorders; Validation results; Diagnosis",,,,,,"Astiti, G.L., (2010) Petunjuk Praktis Manajemen Pencegahan Dan Pengendalian Penyakit Pada Ternak Sapi, , NTB. NTB; 2010; Sunari, A., (2010) Strategi Dan Kebijakan Dalam Percepatan Pencapaian Swasembada Daging Sapi 2014, , Direktorat Pangan dan Pertanian BAPPENAS Jakarta; Giarratano, J., Riley, G., (2005) Expert System Principles and Programming, , PWS Publishing Boston; Turban, E., (1995) Decision Support and Expert Systems: Management Support Systems, Fourth Edition, , Prentice-Hall, Inc United States of America; Setyarin, E., Putra, D., Purnawan, A., The Analysis of Comparison of Expert System of Diagnosing Dog Disease by Certainty Factor Method and Dempster-Shafer Method (2013) IJCSI, pp. 578-584; Manspeaker, J.E., (2016) Metritis and Endometritis, Dairy Integrated Reproductive Management, , Maryland; Bon, A.T., Utami, S.F., (2014) An Analytical Hierarchy Process and Fuzzy Inference System Tsukamoto for Production Planning: A Review and Conceptual Research, , Department of Production and Operations Management, Faculty of Technology Management and B; Daoliang, L., Zetian, F., Duan, Y., Fish Expert a web-based expert system for fish disease diagnosis (2002) Expert Systems with Applications., p. 23; Jang, J.S.R., Sun, C.T., Mizutani, E., (1997) Neuro Fuzzy and Soft Computing Acomputational Approach to Learning and Machine Intelligence, , Prentice Hall London; Munirah, S., Teresa, Design and Development of Online Dog Diseases Diagnosing System (2015) International Journal of Information and Education Technology, 6 (11), pp. 913-1915; Barlund, C., Carruthers, T., Waldner, C., Palmer, C., A comparison of diagnostic techniques for postpartum endometritis in dairy cattle (2008) Theriogenology, 69 (6). , Jan; Eigenberg, R., Hahn, G., Nienaber, J., Brown-Brandl, T., Spiers, D., Development of a new respiration rate monitor for cattle (2000) Transactions of the ASAE, 43 (3)","Suharjito; Computer Science Department, Jl kebon jeruk RayaNo 27, Indonesia; email: suharjito@binus.edu","Budiharto W.Suryani D.Wulandhari L.A.Chowanda A.Gunawan A.A.S.Hanafiah N.Ham H.Meiliana","","Elsevier B.V.","2nd International Conference on Computer Science and Computational Intelligence, ICCSCI 2017","13 October 2017 through 14 October 2017",,139148,18770509,9781510849914,,,"English","Procedia Comput. Sci.",Conference Paper,"Final","All Open Access, Gold",Scopus,2-s2.0-85039997680
"Kusumo D.S., Nugroho A.","55345929100;24477818100;","Understanding differences in process perspectives between developers and acquirers in off-the-shelf-based custom software projects undertaken in Indonesia",2015,"ACM International Conference Proceeding Series","27-29-April-2015",, a28,"","",,,"10.1145/2745802.2745828","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961147398&doi=10.1145%2f2745802.2745828&partnerID=40&md5=b1e907293f4bbed4dde1e1df80577ec1","School of Computing, Telkom University, Bandung, Indonesia; Graduate School of Information Technology, Bina Nusantara University, Jakarta, Indonesia","Kusumo, D.S., School of Computing, Telkom University, Bandung, Indonesia; Nugroho, A., Graduate School of Information Technology, Bina Nusantara University, Jakarta, Indonesia","In Off-the-shelf (OTS)-based custom software projects there are common and different processes between software developers and acquirers. Better understanding of these differences may help to initiate reconciling perspectives between these stakeholders for managing the software processes. An online survey was conducted to explore the involvement of two main stakeholders in OTS-based software project, developer and acquirer, and also their roles in decision making in make vs. buy, and in OTS selection. The respondents were 35 software developers and 34 software acquirers of Indonesian background. Then, a follow-up study involving 4 respondents was conducted to investigate differences in process perspective between both stakeholders. Our study found that for common and unique processes, both stakeholders perceive to have high and medium involvement in their stakeholder's processes. Only for detailed software design and coding, acquirer involvements in OTS-based custom software development were low. This study also found that each stakeholder perceives either themselves or both to make final decision on make vs. buy. In OTS-selection, both stakeholders agreed that developers had higher involvement. Based on the follow-up study findings, we proposed a model comparing and discussing stakeholder involvements, roles and responsibilities to reconcile these differences. A real example from the follow-up study findings was given to demonstrate the proposed model. Copyright 2015 ACM.","Acquirer; Developer; OTS-based custom software project; Perception; Process","Decision making; Processing; Sensory perception; Software engineering; Acquirer; Custom software development; Developer; Follow-up Studies; Offthe-shelf (OTS); Software developer; Software project; Stakeholder involvement; Software design",,,,,,"Adolph, S., Kruchten, P., Hall, W., Reconciling perspectives: A grounded theory of how people manage the process of software development (2012) Journal of Systems and Software, 85 (6), pp. 1269-1286; Alexander, I., Robertson, S., Understanding project sociology by modeling stakeholders (2004) Software, IEEE, 21 (1), pp. 23-27; Andersen, E.S., Grude, K.V., Haug, T., (2009) Goal Directed Project Management: Effective Techniques and Strategies., , Kogan Page Business Book, London; Bano, M., Zowghi, D., A systematic review on the relationship between user involvement and system success (2015) Information and Software Technology, 58, pp. 148-169; Boehm, B., Grunbacher, P., Briggs, R.O., Developing groupware for requirements negotiation: Lessons learned (2001) IEEE Software, 18 (3), pp. 46-55; Boehm, B., Port, D., Ye Yang, Bhuta, J., (2003) Composable Process Elements for developing COTS-Based Applications, pp. 8-17; Brereton, P., The software customer/supplier relationship (2004) Communication of the ACM, 47 (2), pp. 77-81; Brownsword, L., Oberndorf, T., Sledge, C.A., Developing new processes for COTS-based systems (2000) Software, IEEE, 17 (4), pp. 48-55; Carney, D., (1997) Assembling Large Systems from COTS Components: Opportunities, Cautions, and Complexities. SEI Monographs on Use of Commercial Software in Government Systems, , SEI, Pittsburgh, USA; Daneva, M., Van Der Veen, E., Amrit, C., Agile requirements prioritization in large-scale outsourced system projects: An empirical study (2013) Journal of Systems and Software, 86 (5), pp. 1333-1353; Freeman, R.E., (1984) Strategic Management: A Stakeholder Approach, , Pitman; Greer, D., Conradi, R., Software project initiation and planning - An empirical study (2009) Software, IET, 3 (5), pp. 356-368; Grudin, J., Interactive systems: Bridging the gaps between developers and users (1991) Computer, 24 (4), pp. 59-69; Grünbacher, P., Köszegi, S., Biffl, S., Stakeholder value proposition elicitation and reconciliation (2006) Value-Based Software Engineering., pp. 133-154. , S. Biffl, A. Aurum, B. Boehm, H. Erdogmus and P. Grünbacher, eds Springer Berlin Heidelberg; IEEE recommended practice for software acquisition (1998) IEEE Std 1062, , IEEE 1998 Edition; Jepsen, A.L., Eskerod, P., Stakeholder analysis in projects: Challenges in using current guidelines in the real world (2009) International Journal of Project Management, 27 (4), pp. 335-343; Li, J., Slyngstad, O.P.N., Torchiano, M., Morisio, M., Bunse, C., A state-of-The-practice survey of risk management in development with off-The-shelf software components (2008) Software Engineering., 34 (2), pp. 271-286. , IEEE Transactions on; Kaler, J., Differentiating stakeholder theories (2003) Journal of Business Ethics, 46, pp. 71-83; Kusumo, D.S., Staples, M., Zhu, L., Jeffery, R., (2012) Analyzing Differences in Risk Perceptions between Developers and Acquirers in OTS-based Custom Software Projects Using Stakeholder Analysis. 6th International Symposium on Empirical Software Engineering and Measurement, , (ESEM 2012); Kusumo, D.S., Zhu, L., Staples, M., Zhang, H., A systematic mapping study on off-The-shelf-based software acquisition (2011) ACIS 2011 Proceedings, , AIS Electronic Library; Li, J., Bjørnson, F., Conradi, R., Kampenes, V., An empirical study of variations in COTS-based software development processes in the Norwegian IT industry (2006) Empirical Software Engineering, 11 (3), pp. 433-461; McLeod MacDonell, S.G., Doolin, B., User participation in contemporary IS development: An IS management perspective (2007) Australasian Journal of Information Systems, 15 (1), pp. 113-136; Morisio, M., Seaman, C.B., Basili, V.R., Parra, A.T., Kraft, S.E., Condon, S.E., COTS-based software development: Processes and open issues (2002) Journal of Systems and Software, 61 (3), pp. 189-199; Nelson, P., Richmond, W., Seidmann, A., Two dimensions of software acquisition (1996) Communication of the ACM, 39 (7), pp. 29-35; Pouloudi, A., Whitley, E.A., Stakeholder Identification in Inter-Organizational Systems: Gaining Insights for Drug Use Management Systems.; Rasmussen, R., Christensen, A.S., Fjeldsted, T., Hertzum, M., Selecting users for participation in IT projects: Trading a representative sample for advocates and champions? (2011) Interacting with Computers, 23 (2), pp. 176-187; Robey, D., Welke, R., Turk, D., Traditional, iterative, and component-based development: A social analysis of software development paradigms (2001) Information Technology and Management, 2 (1), pp. 53-70; Sharp, H., Finkelstein, A., Galal, G., Stakeholder identification in the requirements engineering process (1999) Tenth International Workshop on Database and Expert Systems Applications, 1999, pp. 387-391. , Proceedings; Sommerville, I., (2007) Models for Responsibility Assignment., pp. 165-186. , G. Dewsbury and J. Dobson, eds., Responsibility and Dependable Systems. Springer, London; Sommerville, I., (2007) Causal Responsibility Models., pp. 187-207. , G. Dewsbury and J. Dobson, eds., Responsibility and Dependable Systems. Springer, London; Svahnberg, M., Wohlin, C., Consensus building when comparing software architectures (2002) Product Focused Software Process Improvement., pp. 436-452. , In M. Oivo and S. Komi-Sirviö, eds. Springer Berlin Heidelberg; Torchiano, M., Morisio, M., Overlooked aspects of COTS-based development (2004) Software, IEEE, 21 (2), pp. 88-93",,,"Nanjing University","Association for Computing Machinery","19th International Conference on Evaluation and Assessment in Software Engineering, EASE 2015","27 April 2015 through 29 April 2015",,119311,,9781450333504,,,"English","ACM Int. Conf. Proc. Ser.",Conference Paper,"Final","",Scopus,2-s2.0-84961147398
"Athanasiou D., Nugroho A., Visser J., Zaidman A.","36963011600;24477818100;57205471180;18435685400;","Test code quality and its relation to issue handling performance",2014,"IEEE Transactions on Software Engineering","40","11", 6862882,"1100","1125",,60,"10.1109/TSE.2014.2342227","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910632460&doi=10.1109%2fTSE.2014.2342227&partnerID=40&md5=f0f2129ad5faf7b8f06df0898961127a","Software Improvement Group, Amstelplein 1, Amsterdam, 1096HA, Netherlands; Model-Based Software Development Group, Radboud University Nijmegen, Heijendaalseweg 135, Nijmegen, AJ  6525, Netherlands; Faculty of Electrical Engineering, Mathematics and Computer Science, Delft University of Technology, Mekelweg 4, Delft, 2628CD, Netherlands","Athanasiou, D., Software Improvement Group, Amstelplein 1, Amsterdam, 1096HA, Netherlands; Nugroho, A., Software Improvement Group, Amstelplein 1, Amsterdam, 1096HA, Netherlands; Visser, J., Software Improvement Group, Amstelplein 1, Amsterdam, 1096HA, Netherlands, Model-Based Software Development Group, Radboud University Nijmegen, Heijendaalseweg 135, Nijmegen, AJ  6525, Netherlands; Zaidman, A., Faculty of Electrical Engineering, Mathematics and Computer Science, Delft University of Technology, Mekelweg 4, Delft, 2628CD, Netherlands","Automated testing is a basic principle of agile development. Its benefits include early defect detection, defect causelocalization and removal of fear to apply changes to the code. Therefore, maintaining high quality test code is essential. This study introduces a model that assesses test code quality by combining source code metrics that reflect three main aspects of test codequality: completeness, effectiveness and maintainability. The model is inspired by the Software Quality Model of the SoftwareImprovement Group which aggregates source code metrics into quality ratings based on benchmarking. To validate the model we assess the relation between test code quality, as measured by the model, and issue handling performance. An experiment isconducted in which the test code quality model is applied to 18 open source systems. The test quality ratings are tested for correlation with issue handling indicators, which are obtained by mining issue repositories. In particular, we study the (1) defect resolution speed, (2) throughput and (3) productivity issue handling metrics. The results reveal a significant positive correlation between test code quality and two out of the three issue handling metrics (throughput and productivity), indicating that good test code quality positively influences issue handling performance. © 2014 IEEE.","bugs; defects; measurement; metrics; Testing","Codes (symbols); Computer software selection and evaluation; Defects; Measurements; Open source software; Open systems; Productivity; Testing; bugs; Handling performance; Issue repositories; metrics; Open source system; Positive correlations; Software quality modeling; Source code metrics; Benchmarking",,,,,,"Bertolino, A., Software testing research: Achievements, chal lenges, dreams (2007) Proc. Future Softw. Eng., pp. 85-103; Ellims, M., Bridges, J., Ince, D.C., The economics of unit testing (2006) Empir. Softw. Eng., 11 (1), pp. 5-31; Zaidman, A., Van Rompaey, B., Van Deursen, A., Demeyer, S., Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining (2011) Empir. Softw. Eng., 16 (3), pp. 325-364; Xiao, X., Thummalapenta, S., Xie, T., Advances on improving automation in developer testing (2012) Adv. Comput., 85, pp. 165-212; Meszaros, G., (2006) XUnit Test Patterns: Refactoring Test Code, , Englewood Cliffs NJ USA: Prentice-Hall; Beck, K., (2003) Test-Driven Development: By Example, , Reading MA USA: Addison-Wesley; Zhu, H., Hall, P.A.V., May, J.H.R., Software unit test coverage and adequacy (1997) ACM Comput. Surveys, 29 (4), pp. 366-427; Heitlager, I., Kuipers, T., Visser, J., A practical model for measuring maintainability (2007) Proc. Int. Conf. Quart. Inf. Commun. Technol., pp. 30-39; Luijten, B., Visser, J., Zaidman, A., Assessment of issue handling efficiency (2010) Proc. Working Conf. Mining Softw. Repositories, pp. 94-97; Weiss, C., Premraj, R., Zimmermann, T., Zeller, A., How long will it take to fix this bug? (2007) Proc. Int. Workshop Mining Softw. Repositories, p. 1; Giger, E., Pinzger, M., Gall, H., Predicting the fix time of bugs (2010) Proc. Int. Workshop Recommendation Syst. Softw. Eng., pp. 52-56; Kim, S., Whitehead, E.J., Jr., How long did it take to fix bugs? (2006) Proc. Int. Workshop Mining Softw. Repositories, pp. 173-174; Ahsan, S.N., Ferzund, J., Wotawa, F., Program file bug fix effort estimation using machine learning methods for OSS (2009) Proc. Int. Conf. Softw. Eng. Knowl. Eng., pp. 129-134; Bijlsma, D., (2010) Indicators of Issue Handling Efficiency and Their Relation to Software Maintainability, , MSc Thesis, Univ. Amsterdam, Amsterdam, The Netherlands; Bijlsma, D., Ferreira, M., Luijten, B., Visser, J., Faster issue resolution with higher technical quality of software (2012) Softw. Quality J., 20 (2), pp. 265-285; Weyuker, E., Axiomatizing software test data adequacy (1986) IEEE Trans. Softw. Eng., SE-12 (12), pp. 1128-1138. , Dec; Hetzel, W.C., Hetzel, B., (1991) The Complete Guide to Software Testing, , New York NY USA: Wiley; Gourlay, J.S., A mathematical framework for the investigation of testing (1983) IEEE Trans. Softw. Eng., SE-9 (6), pp. 686-709. , Nov; Howden, W.E., Methodology for the generation of program test data (1975) IEEE Trans. Comput., C-24 (5), pp. 554-560. , May; Bently, W.G., Miller, E.F., CT coverage initial results (1993) Softw. Quality J., 2 (1), pp. 29-47; Myer, G.J., (1979) The Art of Software Testing, , New York NY USA: Wiley; Woodward, M.R., Hedley, D., Hennell, M.A., Experience with path analysis and testing of programs (1980) IEEE Trans. Softw. Eng., 6 (3), pp. 278-286. , May; Frankl, P.G., Weyuker, E.J., An applicable family of data flow testing criteria (1988) IEEE Trans. Softw. Eng., 14 (10), pp. 1483-1498. , Oct; Rapps, S., Weyuker, E.J., Selecting software test data using data flow information (1985) IEEE Trans. Softw. Eng., SE-11 (4), pp. 367-375. , Apr; Ntafos, S.C., A comparison of some structural testing strategies (1988) IEEE Trans. Softw. Eng., 14 (6), pp. 868-874. , Jun; Clarke, L.A., Podgurski, A., Richardson, D.J., Zeil, S.J., A formal evaluation of data flow path selection criteria (1989) IEEE Trans. Softw. Eng., 15 (11), pp. 1318-1332. , Nov; Laski, J.W., Korel, B., A data flow oriented program testing strategy (1983) IEEE Trans. Softw. Eng., SE-9 (3), pp. 347-354. , May; Podgurski, A., Clarke, L.A., A formal model of program dependences and its implications for software testing, debugging, and maintenance (1990) IEEE Trans. Softw. Eng., 16 (9), pp. 965-979. , Sep; Mills, H.D., (1972) On the Statistical Validation of Computer Programs, , IBM Federal Syst. Division, Gaithersburg, MD, Tech. Rep. FSC-72-6015; Demillo, R.A., Lipton, R.J., Sayward, F.G., Hints on test data selection: Help for the practicing programmer (1978) Computer, 11 (4), pp. 34-41; Hamlet, R.G., Testing programs with the aid of a compiler (1977) IEEE Trans. Softw. Eng., SE-3 (4), pp. 279-290. , Jul; White, L.J., Cohen, E.I., A domain strategy for computer program testing (1980) IEEE Trans. Softw. Eng., SE-6 (3), pp. 247-257. , May; Clarke, L.A., Hassell, J., Richardson, D.J., A close look at domain testing (1982) IEEE Trans. Softw. Eng., SE-8 (4), pp. 380-390. , Jul; Afifi, F.H., White, L.J., Zeil, S.J., Testing for linear errors in nonlinear computer programs (1992) Proc. Int. Conf. Softw. Eng., pp. 81-91; Howden, W., Theory and practice of functional testing (1985) IEEE Softw., 2 (5), pp. 6-17. , Sep; Kudrjavets, G., Nagappan, N., Ball, T., Assessing the relationship between software assertions and faults: An empirical investigation (2006) Proc. 17th Int. Symp. Softw. Rel. Eng., pp. 204-212; Voas, J., How assertions can increase test effectiveness (1997) IEEE Softw., 14 (2), pp. 118-119. , 122, Apr; Van Deursen, A., Moonen, L., Bergh, A., Kok, G., Refactoring test code (2001) Proc. Int. Conf. Extreme Programm. Flexible Process. Softw. Eng., pp. 92-95; Van Rompaey, B., Du Bois, B., Demeyer, S., Rieger, M., On the detection of test smells: A metrics-based approach for general fixture and eager test (2007) IEEE Trans. Softw. Eng., 33 (12), pp. 800-817. , Dec; Reichhart, S., Girba, T., Ducasse, S., Rule-based assessment of test quality (2007) J. Object Technol., 6 (9), pp. 231-251; Greiler, M., Zaidman, A., Van Deursen, A., Storey, M.-A.D., Strategies for avoiding test fixture smells during software evolution (2013) Proc. Working Conf. Mining Softw. Repositories, pp. 387-396; Hunt, A., Thomas, D., (1999) The Pragmatic Programmer: From Journeyman to Master, , Reading MA USA: Addison-Wesley; Zeller, A., (2005) Why Programs Fail: A Guide to Systematic Debugging, , San Mateo, CA, USA: Morgan Kaufmann; Luijten, B., (2009) The Influence of Software Maintainability on Issue Handling, , M.S. thesis, Faculty Elect. Eng., Math. Comput. Sci., Delft Univ. Technol., Delft, The Netherlands; Nugroho, A., (2010) The Effects of UML Modeling on the Quality of Software, , Ph.D. dissertation, Dept. Math. Natural Sci., Faculty Sci., Univ. Leiden, Leiden, The Netherlands; Sliwerski, J., Zimmermann, T., Zeller, A., When do changes induce fixes? (2005) SIGSOFT Softw. Eng. Notes, 30 (4), pp. 1-5; Bird, C., Bachman, A., Aune, E., Duffy, J., Bernstein, A., Filkov, V., Devanbu, P., Fair and balanced?: Bias in bug-fix data sets (2009) Proc. 7th Joint Meeting Eur. Softw. Eng. Conf. ACM SIGSOFT Symp. Foundations Softw. Eng., pp. 121-130; Guo, P.J., Zimmermann, T., Nagappan, N., Murphy, B., 'Not my bug!' and other reasons for software bug report reassignments (2011) Proc. Conf. Comput. Supported Cooperative Work, pp. 395-404; Hooimeijer, P., Weimer, W., Modeling bug report quality (2007) Proc. Int. Conf. Autom. Softw. Eng., pp. 34-43; Bettenburg, N., Just, S., Schroter, A., Weiss, C., Premraj, R., Zimmermann, T., What makes a good bug report? (2008) Proc. SIGSOFT Int. Symp. Foundations Softw. Eng., pp. 308-318; Vonken, F., Zaidman, A., Refactoring with unit testing: A match made in heaven? (2012) Proc. Working Conf. Reverse Eng., pp. 29-38; Mockus, A., Fielding, R.T., Herbsleb, J., A case study of open source software development: The apache server (2000) Proc. Int. Conf. Softw. Eng., pp. 263-272; Baggen, R., Correia, J., Schill, K., Visser, J., Standardized code quality benchmarking for improving software maintainability (2012) Softw. Quality J., pp. 287-307; Luijten, B., Visser, J., Faster defect resolution with higher technical quality of software (2010) 4th Int. Workshop Softw. Quality Maintainability, , presented at the Madrid, Spain; Alves, T.L., Ypma, C., Visser, J., Deriving metric thresholds from benchmark data (2010) Proc. Int. Conf. Softw. Maintenance, pp. 1-10; Basili, V.R., (1992) Software Modeling and Measurement: The Goal/question/metric Paradigm, , Dept. Comput. Sci., Univ. Maryland College Park, College Park, MD, USA, Tech. Rep. UMIACS TR-92-96; An, J., Zhu, J., Software reliability modeling with integrated test coverage (2010) Proc. Int. Conf. Secure Softw. Integr. Rel. Improvement, pp. 106-112; Alves, T.L., Visser, J., Static estimation of test coverage (2009) Proc. Int. Working Conf. Source Code Anal. Manipulation, pp. 55-64; Rothermel, G., Harrold, M.J., A safe, efficient regression test selection technique (1997) ACM Trans. Softw. Eng. Methodol., 6, pp. 173-210; Zaidman, A., Van Rompaey, B., Demeyer, S., Van Deursen, A., Mining software repositories to study co-evolution of production & test code (2008) Proc. Int. Conf. Softw. Testing, Verification, Validation, pp. 220-229; McCabe, T., A complexity measure (1976) IEEE Trans. Softw. Eng., SE-2 (4), pp. 308-320. , Jul; (2001) Software Engineering-Product Quality-Part 1: Quality Model, pp. 1-32. , I.9126-1:2001, ISO, Geneva, Switzerland; Moonen, L., Van Deursen, A., Zaidman, A., Bruntink, M., On the interplay between software testing and evolution and its effect on program comprehension (2008) Software Evolution, pp. 173-202. , T. Mens and S. Demeyer, Eds. New York, NY, USA: Springer; Martin, R.C., (2008) Clean Code: A Handbook of Agile Software Craftsmanship, , Englewood Cliffs NJ USA: Prentice-Hall; Lanza, M., Marinescu, R., (2006) Object-Oriented Metrics in Practice-Using Software Metrics to Characterize Evaluate and Improve the Design of Object-Oriented Systems, , New York NY USA: Springer; Beliakov, G., Pradera, A., Calvo, T., (2007) Aggregation Functions: A Guide for Practitioners, 221. , New York, NY, USA: Springer-Verlag; Alves, T.L., Correia, J.P., Visser, J., Benchmark-based aggregation of metrics to ratings (2011) Proc. Joint Conf. Int. Workshop Softw. Meas. Int. Conf. Softw. Process. Product Meas., pp. 20-29; Athanasiou, D., (2011) Constructing A Test Code Quality Model and Empirically Assessing Its Relation to Issue Handling Performance, , http://resolver.tudelft.nl/uuid:cff6cd3b-a587-42f2-a3ce-e735aebf87ce, M.S. thesis, Delft Univ. Technology, Delft, The Netherlands; Concas, G., Marchesi, M., Pinna, S., Serra, N., Power-laws in a large object-oriented software system (2007) IEEE Trans. Softw. Eng., 33 (10), pp. 687-708. , Oct; Yin, R., (2009) Case Study Research: Design and Methods, 5. , London, U.K.: Sage; Ayari, K., Meshkinfam, P., Antoniol, G., Di Penta, M., Threats on building models from CVS and Bugzilla repositories: The Mozilla case study (2007) Proc. Conf. Center Adv. Studies Collaborative Res., pp. 215-228; Munson, J.C., Elbaum, S.G., Code churn: A measure for estimating the impact of code change (1998) Proc. Int. Conf. Softw. Maintenance, pp. 24-31; Field, A., (2005) Discovering Statistics Using SPSS, 2nd Ed, , London, U.K.: SAGE; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciencies, , Evan-ston IL USA: Routledge; Perry, D.E., Porter, A.A., Votta, L.G., Empirical studies of software engineering: A roadmap (2000) Proc. Int. Conf. Softw. Eng., pp. 345-355; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering: An Introduction, , Norwell MA USA: Kluwer; Yorsh, G., Ball, T., Sagiv, M., Testing, abstraction, theorem proving: Better together! (2006) Proc. Int. Symp. Softw. Testing Anal., pp. 145-156; Robbins, J.E., Adopting open source software engineering (OSSE) practices by adopting OSSE tools (2003) Making Sense of the Bazaar: Perspectives on Open Source and Free Software, , J. Feller, B. Fitzgerald, S. Hissam, and K. Lakham, Eds. Cambridge, MA, USA: MIT Press; Nagappan, N., (2005) A Software Testing and Reliability Early Warning (Strew) Metric Suite, , Ph.D. dissertation, Dept. Comput. Sci., North Carolina State Univ., Raleigh, NC, USA; Nagappan, N., Williams, L., Vouk, M., Osborne, J., Early estimation of software quality using in-process testing metrics: A controlled case study (2005) SIGSOFT Softw. Eng. Notes, 30 (4), pp. 1-7; Kitchenham, B., Pfleeger, S.L., Software quality: The elusive target (1996) IEEE Softw., 13 (1), pp. 12-21. , Jan; McCall, J.A., Richards, P.K., Walters, G.F., Factors in software quality (1977) Nat. Tech. Inf. Serv., 1-3. , 2; Boehm, B.W., Brown, J.R., Lipow, M., Quantitative evaluation of software quality (1976) Proc. Int. Conf. Softw. Eng., pp. 592-605; Grady, R.B., (1992) Practical Software Metrics for Project Management and Process Improvement, , Englewood Cliffs NJ USA: Prentice-Hall; Dromey, R.G., A model for software product quality (1995) IEEE Trans. Softw. Eng., 21 (2), pp. 146-162. , Feb; Pinto, L.S., Sinha, S., Orso, A., Understanding myths and realities of test-suite evolution (2012) Proc. Int. Symp. Foundations Softw. Eng., pp. 331-3311; Lubsen, Z., Zaidman, A., Pinzger, M., Using association rules to study the co-evolution of production & test code (2009) Proc. Int. Working Conf. Mining Softw. Repositories, pp. 151-154; Hurdugaci, V., Zaidman, A., Aiding software developers to maintain developer tests (2012) Proc. Eur. Conf. Softw. Maintenance Reeng., pp. 11-20; Soetens, Q.D., Demeyer, S., Zaidman, A., Change-based test selection in the presence of developer tests (2013) Proc. Eur. Conf. Softw. Maintenance Reeng., pp. 101-110; Kagdi, H.H., Collard, M.L., Maletic, J.I., A survey and taxonomy of approaches for mining software repositories in the context of software evolution (2007) J. Softw. Maintenance, 19 (2), pp. 77-131","Athanasiou, D.; Software Improvement Group, Amstelplein 1, Netherlands",,,"Institute of Electrical and Electronics Engineers Inc.",,,,,00985589,,IESED,,"English","IEEE Trans Software Eng",Article,"Final","All Open Access, Green",Scopus,2-s2.0-84910632460
"Nugroho A., Chaudron M.R.V.","24477818100;6602727769;","The impact of UML modeling on defect density and defect resolution time in a proprietary system",2014,"Empirical Software Engineering","19","4",,"926","954",,8,"10.1007/s10664-013-9243-2","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901845582&doi=10.1007%2fs10664-013-9243-2&partnerID=40&md5=2f11db0c4088a9b4bb5f216716bf51fa","Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands; Leiden University, P.O. Box 9512, 2300 RA Leiden, Netherlands","Nugroho, A., Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands; Chaudron, M.R.V., Leiden University, P.O. Box 9512, 2300 RA Leiden, Netherlands","Background: The contribution of modeling in software development has been a subject of debates. The proponents of model-driven development argue that a big upfront modeling requires substantial investment, but it will payoff later in the implementation phase in terms of increased productivity and quality. Other software engineers perceive modeling activity as a waste of time and money without any real contribution to the final software product. Considering present advancement of model-based software development in software industry, we are challenged to investigate the real contribution of modeling in software development. Objective: We analyze the impacts of UML modeling, specifically the production of class and sequence diagrams, on the quality of the code, as measured by defect density, and on defect resolution time. Method: Using data of a proprietary system, we conduct post-mortem analyses to test the difference in defect density between software modules that are modeled and not modeled. Similarly, we test the difference in resolution time between defects that are related to modeled and not modeled functionality. Result: We have found that the production of UML class diagrams and sequence diagrams reduces defect density in the code and the time required to fix defects. These results are obtained after controlling for the effects of co-factors such as code coupling and complexity. Conclusion: The results confirm that not only does the production of UML class diagrams and sequence diagrams possibly help improve the quality of software, but also it possibly help increase the productivity in software maintenance. © 2013 Springer Science+Business Media New York.","Bugs; Defect density; Defect resolution time; Effort; Productivity; Quality; Software maintenance; UML","Codes (symbols); Computer software maintenance; Defects; Image quality; Productivity; Program debugging; Software design; Software testing; Bugs; Effort; Increased productivity; Model driven development; Quality of softwares; Resolution time; Substantial investments; UML; Defect density",,,,"Stichting voor de Technische Wetenschappen, STW","Acknowledgements This work was accomplished under the FINESSE (des7015) project supported by the STW (Stichting Technische Wetenschappen), the Netherlands. We thank Logica and the project members of the IPS project for the discussions and support in providing the project data. Thanks also to the anonymous referees for their constructive comments that made a valuable contribution to this paper.","Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Trans Softw Eng, 32 (6), pp. 365-381. , 10.1109/TSE.2006.59; Bettenburg, N., Just, S., Schröter, A., Weiss, C., Premraj, R., Zimmermann, T., What makes a good bug report? (2008) Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 308-318. , ACM New York 10.1145/1453101.1453146; Bijlsma, D., Ferreira, M., Luijten, B., Visser, J., Faster issue resolution with higher technical quality of software (2011) Softw Qual J, 20, pp. 1-21; Briand, L.C., Labiche, Y., Penta, M.D., Yan-Bondoc, H.D., An experimental investigation of formality in UML-based development (2005) IEEE Trans Softw Eng, 31 (10), pp. 833-849. , 10.1109/TSE.2005.105; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Trans Softw Eng, 20 (6), pp. 476-493. , 10.1109/32.295895; Cruz-Lemus, J., Genero, M., Manso, M., Morasca, S., Piattini, M., Assessing the understandability of uml statechart diagrams with composite states - A family of empirical studies (2009) Empir Softw Eng, 14 (6), pp. 685-719. , 10.1007/s10664-009-9106-z; Cruz-Lemus, J.A., Genero, M., Caivano, D., Abrahão, S., Insfrán, E., Carsí, J.A., Assessing the influence of stereotypes on the comprehension of UML sequence diagrams: A family of experiments (2011) Inf Softw Technol, 53 (12), pp. 1391-1403. , 10.1016/j.infsof.2011.07.002; Dzidek, W., Arisholm, E., Briand, L., A realistic empirical evaluation of the costs and benefits of UML in software maintenance (2008) IEEE Trans Softw Eng, 34 (3), pp. 407-432. , 10.1109/TSE.2008.15; Fernández-Sáez, A., Genero, M., Chaudron, M., Does the level of detail of uml models affect the maintainability of source code? (2011) Proceedings of Experiences and Empirical Studies in Software Modelling (EESSMod 2011); Fenton, N.E., Neil, M., A critique of software defect prediction models (1999) IEEE Trans Softw Eng, 25 (5), pp. 675-689. , 10.1109/32.815326; Forward, A., Lethbridge, T., Perceptions of software modeling: A survey of software practitioners (2010) 5th Workshop from Code Centric to Model Centric: Evaluating the Effectiveness of MDD (C2M: EEMDD); Glezer, C., Last, M., Nachmany, E., Shoval, P., Quality and comprehension of UML interaction diagrams - An experimental comparison (2005) Inf Softw Technol, 47 (10), pp. 675-692. , 10.1016/j.infsof.2005.01.003; Gravino, C., Tortora, G., Scanniello, G., An empirical investigation on the relation between analysis models and source code comprehension (2010) Proceedings of the 2010 ACM Symposium on Applied Computing, pp. 2365-2366. , ACM New York 10.1145/1774088.1774576; Highsmith, J., Cockburn, A., Agile software development: The business of innovation (2001) Computer, 34, pp. 120-122. , 10.1109/2.947100; Khoshgoftaar, T.M., Allen, E.B., Ordering fault-prone software modules (2003) Softw Qual J, 11 (1), pp. 19-37. , 10.1023/A:1023632027907; Kim, S., Whitehead, Jr.E., How long did it take to fix bugs? (2006) Proceedings of the 2006 International Workshop on Mining Software Repositories, pp. 173-174. , ACM New York 10.1145/1137983.1138027; Koru, A.G., Liu, H., An investigation of the effect of module size on defect prediction using static measures (2005) SIGSOFT Softw Eng Notes, 30 (4), pp. 1-5; Krus, D.J., Krus, P.H., Lost: Mccall's T scores: Why? (1977) Educ Psychol Meas, 37 (1), pp. 257-261. , 10.1177/001316447703700134; Luijten, B., Visser, J., Zaidman, A., Assessment of issue handling efficiency (2010) 2010 7th IEEE Working Conference on Mining Software Repositories (MSR), pp. 94-97. , IEEE Piscataway 10.1109/MSR.2010.5463292; Mann, H.B., Whitney, D.R., On a test of whether one of two random variables is stochastically larger than the other (1947) Ann Math Stat, 18 (1), pp. 50-60. , 10.1214/aoms/1177730491 0041.26103 22058; McCabe, T.J., A complexity measure (1976) IEEE Trans Softw Eng, 2 (4), pp. 308-320. , 10.1109/TSE.1976.233837 0352.68066 445904; Mohagheghi, P., Conradi, R., Killi, O., Schwarz, H., An empirical study of software reuse vs. Defect-density and stability (2004) Proceedings of the 26th International Conference on Software Engineering, pp. 282-291. , IEEE Piscataway 10.1109/ICSE.2004.1317450; Nagappan, N., Ball, T., Use of relative code churn measures to predict system defect density (2005) Proceedings of the 27th International Conference on Software Engineering, pp. 284-292. , IEEE Piscataway; Nugroho, A., Level of detail in uml models and its impact on model comprehension: A controlled experiment (2009) Inf Softw Technol, 51 (12), pp. 1670-1685. , 10.1016/j.infsof.2009.04.007; Nugroho, A., Chaudron, M.R.V., Managing the quality of UML models in practice (2008) Model-driven Software Development: Integrating Quality Assurance. Information Science Reference, pp. 1-36. , Rech J, Bunse C (eds) Imprint of: IGI Publishing, Hershey; Nugroho, A., Chaudron, M.R.V., A survey into the rigor of UML use and its perceived impact on quality and productivity (2008) ESEM '08: Proceedings of the Second ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, pp. 90-99. , ACM New York 10.1145/1414004.1414020; Nugroho, A., Chaudron, M., Evaluating the impact of uml modeling on software quality: An industrial case study (2009) Model Driven Engineering Languages and Systems, pp. 181-195; Nugroho, A., Flaton, B., Chaudron, M.R.V., Empirical analysis of the relation between level of detail in UML models and defect density (2008) Lecture Notes in Computer Science, 5301, pp. 600-614. , Czarnecki K, Ober I, Bruel J-M, Uhl A, Völter M (eds) Proceedings of the 11th international conference on model driven engineering languages and systems (MODELS), Toulouse, France, Sept 28-Oct 3 2008, Springer, Berlin Heidelberg; Otero, M.C., Dolado, J., Evaluation of the comprehension of the dynamic modeling in UML (2004) Inf Softw Technol, 46 (1), pp. 35-53. , 10.1016/S0950-5849(03)00108-3; Ricca, F., Penta, M.D., Torchiano, M., Tonella, P., Ceccato, M., The role of experience and ability in comprehension tasks supported by UML stereotypes (2007) ICSE '07: Proceedings of the 29th International Conference on Software Engineering, pp. 375-384. , IEEE Computer Society Press Washington, DC; Rutherford, A., (2001) Introducing ANOVA and ANCOVA: A GLM Approach, , Sage Newbury Park; Scanniello, G., Ricca, F., Torchiano, M., On the effectiveness of the UML object diagrams: A replicated experiment (2011) 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), pp. 76-85. , IET; Śliwerski, J., Zimmermann, T., Zeller, A., When do changes induce fixes? (2005) ACM Sigsoft Software Engineering Notes, 30, pp. 1-5. , ACM New York; Staron, M., Kuzniarz, L., Wohlin, C., Empirical assessment of using stereotypes to improve comprehension of UML models: A set of experiments (2006) J Syst Softw, 79 (5), pp. 727-742. , 10.1016/j.jss.2005.09.014; Subramanyam, R., Krishnan, M.S., Empirical analysis of CK metrics for object-oriented design complexity: Implications for software defects (2003) IEEE Trans Softw Eng, 29 (4), pp. 297-310. , 10.1109/TSE.2003.1191795; Thörn, C., Gustafsson, T., Uptake of modeling practices in SMES: Initial results from an industrial survey (2008) Proceedings of the 2008 International Workshop on Models in Software Engineering, pp. 21-26. , ACM New York 10.1145/1370731.1370737; Torchiano, M., Empirical assessment of UML static object diagrams (2004) International Workshop on Program Comprehension, pp. 226-230; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering: An Introduction, , Kluwer Academic Norwell 10.1007/978-1-4615-4625-2; Wust, J., (2005) SDMetrics: The Software Design Metrics Tool for UML","Nugroho, A.; Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands; email: a.nugroho@sig.eu",,,"Kluwer Academic Publishers",,,,,13823256,,ESENF,,"English","Empir Software Eng",Article,"Final","",Scopus,2-s2.0-84901845582
"Aldris A., Nugroho A., Lago P., Visser J.","55807994700;24477818100;56187491900;57205471180;","Measuring the degree of service orientation in proprietary SOA systems",2013,"Proceedings - 2013 IEEE 7th International Symposium on Service-Oriented System Engineering, SOSE 2013",,, 6525526,"233","244",,8,"10.1109/SOSE.2013.63","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880860785&doi=10.1109%2fSOSE.2013.63&partnerID=40&md5=088ef0258c682b45ce1469c0cc245cb8","Software Improvement Group, Netherlands; VU University Amsterdam, Netherlands; Radboud University Nijmegen, Netherlands","Aldris, A., VU University Amsterdam, Netherlands; Nugroho, A., Software Improvement Group, Netherlands; Lago, P., VU University Amsterdam, Netherlands; Visser, J., Software Improvement Group, Netherlands, Radboud University Nijmegen, Netherlands","According to a survey conducted by Forrester Research in 2008, at least 44% of North American, European, and Asian-Pacific enterprises have adopted SOA (Service-oriented Architecture), and at least 63% would adopt it by the end of 2008 [1]. A more recent survey by Forrester also shows that SOA adoption remains strong in 2010 [2]. Nevertheless, there are many misconceptions about SOA [3], which could lead to sub optimal implementation of the paradigm. This paper is not about whether to adopt or not to adopt SOA. Instead, this paper proposes a method on how to judge an SOA implementation from architectural point of view. More specifically, we evaluate the extent to which proprietary SOA systems conform to the principles of service orientation. To this aim, a framework of Degree of Service Orientation (DoSO) has been developed. This framework is applied to nine proprietary SOA systems and the results show that, on average, the degree of service orientation is rather low. Experts' evaluation on the usefulness of the framework is also discussed. © 2012 IEEE.",,"Architectural points; Forrester Research; North American; Service orientation; Soa (serviceoriented architecture); SOA implementations; Information services; Service oriented architecture (SOA); Systems engineering; Surveys",,,,,,"Heffner, R., (2008) SOA Adoption: Budgets Don't Matter Much, , Forrester Research; Heffner, R., Leganza, G., Blackburn, L., SOA adoption 2010: Still important, still strong (2011) Forrester Research, Tech. Rep.; Lewis, G., Morris, E., Simanta, S., Wrage, L., Common misconceptions about service-oriented architecture (2007) Commercial-off-the-Shelf (COTS), pp. 123-130. , Based Software Systems, 2007. ICCBSS'07. Sixth International IEEE Conference on. IEEE; Mahmood, Z., The promise and limitations of service oriented architecture (2007) International Journal of Computers, 1 (3), pp. 74-78; Huhns, M., Singh, M., Service-oriented computing: Key concepts and principles (2005) Internet Computing, IEEE, 9 (1), pp. 75-81; Cherbakov, L., Galambos, G., Harishankar, R., Kalyana, S., Rackham, G., Impact of service orientation at the business level (2005) IBM Systems Journal, 44 (4), pp. 653-668; O'Brien, L., Brebner, P., Gray, J., Business transformation to soa: Aspects of the migration and performance and qos issues (2008) Proceedings of the 2nd International Workshop on Systems Development in SOA Environments ACM, pp. 35-40; (2002) Capability Maturity Model R Integration (CMMI SM), Version 1.1, , CMMI Product Team, Software Engineering Institute, Carnegie Mellon University, Pittsburg, PA, Tech. Rep. SEI-2002-TR-012; Welke, R., Hirschheim, R., Schwarz, A., Service-oriented architecture maturity (2011) Computer, 44 (2), pp. 61-67; Rathfelder, C., Groenda, H., Isoamm: An independent soa maturity model (2008) Distributed Applications and Interoperable Systems, pp. 1-15. , Springer; Arsanjani, A., Holley, K., The service integration maturity model: Achieving flexibility in the transformation to soa (2006) Services Computing, 2006 SCC'06, pp. 515-515. , IEEE International Conference on. IEEE; Papazoglou, M., Extending the service oriented architecture (2005) Business Integration Journal, 7 (1), pp. 18-21; Razavian, M., Lago, P., A frame of reference for SOA migration (2010) Towards A Service-Based Internet, 6481, pp. 150-162. , ser. Lecture Notes in Computer Science, E. Di Nitto and R. Yahyapour, Eds. Springer Berlin/Heidelberg, dec; A survey of SOA migration in industry (2011) Service Oriented Computing, pp. 618-626. , ser. LNCS, vol. 7084. Berlin: Springer-Verlag, dec; McCall, J., Richards, P., Walters, G., (1977) Factors in Software Quality - Concepts and Definitions of Software Quality, , DTIC Document, Tech. Rep; (2011) 2011, Systems and Software Engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality Models, , ISO, ISO/IEC 25010:; Kasunic, M., Measuring systems interoperability: Challenges and opportunities (2001) Software Engineering Institute, Tech. Rep.; Subramanian, N., Chung, L., Metrics for software adaptability (2001) Proc. Software Quality Management (SQM 2001), , April; Washizaki, H., Yamamoto, H., Fukazawa, Y., A metrics suite for measuring reusability of software components (2003) Software Metrics Symposium, 2003, pp. 211-223. , Proceedings. Ninth International. IEEE; Haesen, R., Snoeck, M., Lemahieu, W., Poelmans, S., On the definition of service granularity and its architectural impact (2008) Advanced Information Systems Engineering, pp. 375-389. , Springer; Price, M., Demurjian Sr., S., Analyzing and measuring reusability in object-oriented design (1997) ACM SIGPLAN Notices, 32 (10), pp. 22-33. , ACM; Erl, T., (2007) SOA: Principles of Service Design, , Prentice Hall Press; Papazoglou, M., Service-oriented computing: Concepts, characteristics and directions (2003) Web Information Systems Engineering, 2003 WISE 2003, pp. 3-12. , Proceedings of the Fourth International Conference on. IEEE; Papazoglou, M., Van Den Heuvel, W., Service oriented architectures: Approaches, technologies and research issues (2007) The VLDB Journal, 16 (3), pp. 389-415; Baggen, R., Schill, K., Visser, J., Standardized code quality benchmarking for improving software maintainability (2010) Proceedings of the 4th International Workshop on Software Quality and Maintainability; Jørgensen, M., A review of studies on expert estimation of software development effort (2004) Journal of Systems and Software, 70 (1), pp. 37-60; Höst, M., Wohlin, C., An experimental study of individual subjective effort estimation and combinations of the estimates (1998) Proceedings of the 20th International Conference on Software Engineering, pp. 332-339. , IEEE Computer Society; Riemenschneider, C., Hardgrave, B., Davis, F., Explaining software developer acceptance of methodologies: A comparison of five theoretical models (2002) IEEE Transactions on Software Engineering, 28 (12), pp. 1135-1145; Beliakov, G., Pradera, A., Calvo, T., (2008) Aggregation Functions: A Guide for Practitioners, , Springer Publishing Company, Incorporated; Shim, B., Choue, S., Kim, S., Park, S., A design quality model for service-oriented architecture (2008) Software Engineering Conference, 2008 APSEC'08, pp. 403-410. , 15th Asia-Pacific. Ieee; Alahmari, S., Zaluska, E., De Roure, D., A metrics framework for evaluating soa service granularity (2011) Services Computing (SCC), pp. 512-519. , 2011 IEEE International Conference on. IEEE; Bianco, P., Kotermanski, R., Merson, P., Evaluating a serviceoriented architecture (2007) Software Engineering Institute, Tech. Rep.; Kazman, R., Klein, M., Clements, P., ATAM: Method for architecture evaluation (2000) Software Engineering Institute, Tech. Rep.; Hau, T., Ebert, N., Hochstein, A., Brenner, W., Where to start with soa: Criteria for selecting soa projects (2008) Hawaii International Conference on System Sciences, pp. 314-314. , Proceedings of the 41st Annual. IEEE","Software Improvement GroupNetherlands",,,,"2013 IEEE 7th International Symposium on Service-Oriented System Engineering, SOSE 2013","25 March 2013 through 28 March 2013","Redwood City, San Francisco Bay, CA",98070,,9780769549446,,,"English","Proc. - IEEE Int. Symp. Serv.-Oriented Syst. Eng., SOSE",Conference Paper,"Final","All Open Access, Green",Scopus,2-s2.0-84880860785
"Weimar E., Nugroho A., Visser J., Plaat A.","55681245500;24477818100;57205471180;6602918705;","Towards high performance software teamwork",2013,"ACM International Conference Proceeding Series",,,,"212","215",,11,"10.1145/2460999.2461030","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877267885&doi=10.1145%2f2460999.2461030&partnerID=40&md5=408dc9f226343e6074d4cb99bddf8c77","School of Humanities, Tilburg University, Warandelaan 2, 5037 AB Tilburg, Netherlands; Research Department, Software Improvement Group, Amstelplein 1, 1096 HA Amsterdam, Netherlands; Faculty of Science, Radboud University, Comeniuslaan 4, 6525 HP Nijmegen, Netherlands","Weimar, E., School of Humanities, Tilburg University, Warandelaan 2, 5037 AB Tilburg, Netherlands, Research Department, Software Improvement Group, Amstelplein 1, 1096 HA Amsterdam, Netherlands; Nugroho, A., Research Department, Software Improvement Group, Amstelplein 1, 1096 HA Amsterdam, Netherlands; Visser, J., Research Department, Software Improvement Group, Amstelplein 1, 1096 HA Amsterdam, Netherlands, Faculty of Science, Radboud University, Comeniuslaan 4, 6525 HP Nijmegen, Netherlands; Plaat, A., School of Humanities, Tilburg University, Warandelaan 2, 5037 AB Tilburg, Netherlands","Context: Research indicates that software quality, to a large extent, depends on cooperation within software teams [1]. Since software development is a creative process that involves human interaction in the context of a team, it is important to understand the teamwork factors that influence performance. Objective: We present a study design in which we aim to examine the factors within software development teams that have significant influence on the performance of the team. We propose to consider factors such as communication, coordination of expertise, cohesion, trust, cooperation, and value diversity. The study investigates whether and to which extent these factors correlate with a performance of the team. In order to capture a variety of relevant teamwork factors, we created a new model extending the work of Hoegl and Gemuenden [2] and Liang et al. [3]. Method: The study is based on quantitative research by means of an online questionnaire. We invited more than 20 software development teams in the Netherlands to participate in our team performance assessment, evaluating the teamwork and performance of the team. Based on an average team size of five people, one would therefore expect at least 100 participants in total. Also, product stakeholders will be asked to give their independent assessments of the performance of the team. Expected result: By analyzing the correlation between teamwork factors and team performance, we expect to gain a deeper understanding of how teamwork factors influence team performance. We also expect to validate the implemented extensions of teamwork model with respect to earlier work. Conclusion: Software teamwork factors are important to understand. In order to get a better understanding of the role of teamwork factors, this study should be conducted. Copyright 2013 ACM.","Software development; Software teams; Team performance; Teamwork factors","Human interactions; Independent assessment; Online questionnaire; Quantitative research; Software development teams; Software teams; Team performance; Teamwork factors; Computer software selection and evaluation; Software engineering; Software design",,,,,,"Jones, M.C., Harrison, A.W., IS project team performance: An empirical assessment (1996) Inf. Man, 31 (31), pp. 57-65; Hoegl, M., Gemuenden, H.G., Teamwork quality and the success of innovative projects: A theoretical concept and empirical evidence (2001) Org. Sc, 12 (12), pp. 435-449; Liang, T.P., Wu, J.C.H., Jiang, J.J., Klein, G., The impact of value diversity on information system development projects (2012) Int. J. of Proj, 30 (6), pp. 731-739. , (Aug. 2012); Henderson, J.C., Lee, S., Managing I/S design teams: A control theories perspective (1992) Man. Sc, 38 (38), pp. 757-777; Friedlander, F., The primacy of trust as a facilitator of further group accomplishment (1970) J. Appl. Beh. Sc, 6 (6), pp. 387-400; Bandow, D., Time to create sound teamwork (2001) J. Qual. Part, 24, pp. 41-47; Salas, E., Sims, D.E., Burke, C.S., Is there a ""Big five,"" in teamwork? (2005) Small Gr. Res, 36 (36), pp. 555-599; Cockburn, A., Highsmith, J., Agile software development: The people factor (2001) Soft. Man, 34 (34), pp. 131-133; Salas, E., Cooke, N.J., Rosen, On teams, teamwork, and team performance: Discoveries and developments (2008) Hum. Fac.: J. Hum. Fac. Erg. Soc, 50 (50), pp. 540-547; Kozlowski, S.W.J., Klein, K.J., A multilevel approach to theory and research in organizations: Contextual, temporal, and emergent processes (2000) Multilevel Theory, Research, and Methods in Organizations: Foundations, Extensions, and New Directions, pp. 3-90. , K. J. Klein & S. W. J. Kozlowski, Ed. Jossey-Bass, San Francisco; Hackman, J.R., The design of work teams (1987) Handbook of Organizational Behavior, pp. 315-342. , J. Lorsch, Ed. Prentice Hall, New York, NY; Faraj, S., Sproull, L., Coordinating expertise in software development teams (2000) Man. Sc, 46 (46), pp. 1554-1568; Pinto, M.B., Pinto, J.K., Project team communication and cross-functional cooperation in new program development (1990) J. Prod. Inn. Man, 7 (7), pp. 200-212; Brodbeck, F.C., Communication and performance in software development projects (2001) Eur. J. Work and Org. Psy, 10 (10), pp. 73-94; He, J., Butler, B.S., King, W.R., Team cognition: Development and evolution in software project teams (2007) J. Man. Inf. Sys, 24 (24), pp. 261-292; Han, H.S., Lee, J.N., Seo, Y.W., Analyzing the impact of a firm's capability on outsourcing success: A process perspective (2008) Inf. Man, 45 (45), pp. 31-42; Salas, E., Cannon-Bowers, J.A., Johnston, J.H., How can you turn a team of experts into an expert team?: Emerging training strategies (1997) Naturalistic Decision Making, pp. 359-370. , C. Zsambok & Klein G., Ed. Lawrence Erlbaum, Hillsdale, NJ; Jarvenpaa, S.L., Knoll, K., Leidner, D.E., Is anybody out there?: Antecedents of trust in global virtual teams (1998) J. Man. Inf. Sys, 14 (14), pp. 29-64; Mullen, B., Copper, C., The relation between group cohesiveness and performance: An integration (1994) Psy. Bul, 115 (115), pp. 210-227; Carron, A.V., Widmeyer, W.N., Brawley, L.R., The development of an instrument to assess cohesion in sport teams: The group environment questionnaire (1985) J. Sport Psy., 7 (3), pp. 244-266. , (Sept. 1985); Gully, S.M., Devine, D.J., Whitney, D.J., A metaanalysis of cohesion and performance: Effects of level of analysis and task interdependence (1995) Small Gr. Res, 26 (26), pp. 497-520; Mayer, R.C., Davis, J.H., Schoorman, F.D., An integrative model of organizational trust (1995) Acad. Man. Rev, 20 (20), pp. 709-734; Tjosvold, D., Cooperation theory, constructive controversy, and effectiveness: Learning from crisis (1995) Team Effectiveness and Decision Making in Organizations, pp. 79-112. , RA. Guzzo, E. Salas and Associates, Ed. Jossey-Bass, San Francisco; Jehn, K.A., Enhancing effectiveness: An investigation of advantages and disadvantages of value-based intra-group conflict (1994) Int. J. Conf. Man, 5 (5), pp. 223-238; Jehn, K.A., Northcraft, G.B., Neale, M.A., Why differences make a difference: A field study of diversity, conflict, and performance in workgroups (1999) Admin. Sc. Quar., 44 (44), pp. 741-763; Agarwal, N., Rathod, U., Defining 'success' for software projects: An exploratory revelation (2006) Int. J. Proj. Man, 24 (24), pp. 358-370; Chin, W.W., Salisbury, W.D., Pearson, A.W., Stollak, M.J., Perceived cohesion in small groups: Adapting and testing the perceived cohesion scale in a small-group setting (1999) Small Gr. Res, 30 (30), pp. 751-766; Da Silva, F.Q.B., Franca, A.C.C., Gouveia, T.B., Monteiro, C.V.F., Cardozo, E.S.F., Suassuna, M., An empirical study on the use of team building criteria in software projects (2011) Proc. of the 2011 Symp. Emp. Soft. Eng. Meas. (ESEM), pp. 58-67. , (Banff, Canada, Sept. 22-23, 2011); Tannenbaum, S.I., Beard, R.L., Salas, E., Team building and its influence on team effectiveness: An examination of conceptual and empirical developments (1992) Issues, Theory, and Research in Industrial/Organizational Psychology, pp. 117-153. , K. Kelley, Ed. Elsevier, Amsterdam; Sauer, C., Gemino, A., Reich, B.H., The impact of size and volatility on IT project performance (2007) Com. ACM, 50 (50), pp. 79-84","School of Humanities, Warandelaan 2, 5037 AB Tilburg, Netherlands",,"Centro de Informatica - UFPE;Universidade Federal de Pernambuco;CAPES;Fund. Amparo Cienc. Tecnol. Estado Pernambuco (FACEPE);Cons. Nac. Desenvolv. Cient. Tecnol. (CNPq)",,"17th International Conference on Evaluation and Assessment in Software Engineering, EASE 2013","14 April 2013 through 16 April 2013","Porto de Galinhas",96818,,9781450318488,,,"English","ACM Int. Conf. Proc. Ser.",Conference Paper,"Final","All Open Access, Green",Scopus,2-s2.0-84877267885
"Vargas R.T., Nugroho A., Chaudron M., Visser J.","55596721300;24477818100;6602727769;57205471180;","The use of UML class diagrams and its effect on code change-proneness",2012,"Proceedings of the 2nd International Workshop on Experiences and Empirical Studies in Software Modelling, EESSMod 2012",,,,"","",,5,"10.1145/2424563.2424566","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873846016&doi=10.1145%2f2424563.2424566&partnerID=40&md5=9544cc3f8eacb33811f3df093180cf05","Leiden Institute of Advanced Computer Science, Leiden, Netherlands; Software Improvement Group, Amsterdam, Netherlands; Radboud University Nijmegen, Netherlands","Vargas, R.T., Leiden Institute of Advanced Computer Science, Leiden, Netherlands; Nugroho, A., Software Improvement Group, Amsterdam, Netherlands; Chaudron, M., Leiden Institute of Advanced Computer Science, Leiden, Netherlands; Visser, J., Software Improvement Group, Amsterdam, Netherlands, Radboud University Nijmegen, Netherlands","The goal of this study is to investigate the use of UML and its impact on the change proneness of the implementation code. We look at whether the use of UML class diagrams, as opposed to using no modeling notation, influences code change proneness. Furthermore, using five design metrics we measure the quality of UML class diagrams and explore its correlation with code change proneness. Based on a UML model of an industrial system and multiple snapshots of the implementation code, we have found that at the system level the change proneness of code modeled using class diagrams is lower than that of code that is not modeled at all. However, we observe different results when performing the analysis at different system levels (e.g., subsystem and sub subsystem). Additionally, we have found significant correlations between class diagram size, complexity, and level of detail and the change proneness of the implementation code. © 2012 ACM.","code churn; quality; unified modeling language","Class diagrams; Code changes; code churn; Design metrics; Industrial systems; Level of detail; Modeling notation; System levels; UML class diagrams; UML Model; Encoding (symbols); Image quality; Unified Modeling Language",,,,,,"Ambler, S., (2005) The Elements of UML 2.0 Style, , Cambridge University Press; Arisholm, E., Briand, L., Foyen, A., Dynamic coupling measurement for object-oriented software (2004) Software Engineering, IEEE Transactions on, 30 (8), pp. 491-506; Arisholm, E., Briand, L., Hove, S., Labiche, Y., The impact of uml documentation on software maintenance: An experimental evaluation (2006) Software Engineering, IEEE Transactions on, 32 (6), pp. 365-381; Briand, L., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in uml-based development (2005) Software Engineering, IEEE Transactions on, 31 (10), pp. 833-849; Fernández-Sáez, A., Genero, M., Chaudron, M., Does the level of detail of uml models affect the maintainability of source code? Proceedings of EESSMod 2011, 2011; Genero, M., Cruz-Lemus, J., Caivano, D., Abrahão, S., Insfran, E., Carsí, J., Assessing the influence of stereotypes on the comprehension of uml sequence diagrams: A controlled experiment (2008) Model Driven Engineering Languages and Systems, pp. 280-294; Kuzniarz, L., Staron, M., Wohlin, C., An empirical study on using stereotypes to improve understanding of uml models (2004) Program Comprehension, 2004. Proceedings. 12th IEEE International Workshop on, pp. 14-23. , IEEE; McCabe, T.J., A complexity measure (1976) Proceedings of the 2nd International Conference on Software Engineering, ICSE '76, p. 407. , Los Alamitos, CA, USA, IEEE Computer Society Press; Nagappan, N., Ball, T., Use of relative code churn measures to predict system defect density (2005) Proceedings of the 27th International Conference on Software Engineering, ICSE '05, pp. 284-292. , IEEE; Nugroho, A., Level of detail in uml models and its impact on model comprehension: A controlled experiment (2009) Information and Software Technology, 51 (12), pp. 1670-1685; Nugroho, A., Chaudron, M., Evaluating the impact of uml modeling on software quality: An industrial case study (2009) Model Driven Engineering Languages and Systems, pp. 181-195; Nugroho, A., Flaton, B., Chaudron, M., Empirical analysis of the relation between level of detail in uml models and defect density (2008) Model Driven Engineering Languages and Systems, pp. 600-614; Tryggeseth, E., Report from an experiment: Impact of documentation on maintenance (1997) Empirical Software Engineering, 2 (2), pp. 201-207; Wohlin, C., Runeson, P., Host, M., Ohlsson, C., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering: An Introduction, , Kluver Academic Publishers; Wüst, J., (2012) SDMetrics: The Software Design Metrics Tool for the UML, , www.sdmetrics.com","Vargas, R.T.; Leiden Institute of Advanced Computer Science, Leiden, Netherlands; email: torresvargas82@gmail.com",,"IEEE CS;ACM Special Interest Group on Software Engineering (SIGSOFT)",,"2nd International Workshop on Experiences and Empirical Studies in Software Modelling, EESSMod 2012","1 October 2012 through 5 October 2012","Innsbruck",95264,,9781450318112,,,"English","Proc. Int. Workshop Exp. Empir. Stud. Softw. Model., EESSMod",Conference Paper,"Final","",Scopus,2-s2.0-84873846016
"Chaudron M.R.V., Heijstek W., Nugroho A.","6602727769;26430856300;24477818100;","How effective is UML modeling?: An empirical perspective on costs and benefits",2012,"Software and Systems Modeling","11","4",,"571","580",,39,"10.1007/s10270-012-0278-4","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867902259&doi=10.1007%2fs10270-012-0278-4&partnerID=40&md5=5674c523aee58c91c00d0caae1df8c92","Leiden Institute of Advanced Computer Science, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Software Improvement Group, Amstelplein 1, 1096 HA Amsterdam, Netherlands","Chaudron, M.R.V., Leiden Institute of Advanced Computer Science, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Heijstek, W., Leiden Institute of Advanced Computer Science, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Nugroho, A., Software Improvement Group, Amstelplein 1, 1096 HA Amsterdam, Netherlands","Modeling has become a common practice in modern software engineering. Since the mid 1990s the Unified Modeling Language (UML) has become the de facto standard for modeling software systems. The UML is used in all phases of software development: ranging from the requirement phase to the maintenance phase. However, empirical evidence regarding the effectiveness of modeling in software development is few and far apart. This paper aims to synthesize empirical evidence regarding the effectiveness of modeling using UML in software development, with a special focus on the cost and benefits. © 2012 Springer-Verlag.","Costs and benefits; Effectiveness; Productivity; Quality; Unified Modeling Language","Cost and benefits; Costs and benefits; De facto standard; Effectiveness; Empirical evidence; Modeling softwares; UML Modeling; Image quality; Productivity; Software design; Unified Modeling Language",,,,,,"Anda, B., Hansen, K., Gullesen, I., Thorsen, H.K., Experiences from introducing uml-based development in a large safety-critical project (2006) Empir. Softw. Eng., 11 (4), pp. 555-581; Boehm, B.W., (1981) Software Engineering Economics, , Englewood Cliffs, NJ: Prentice Hall; Boehm, B.W., Gray, T.E., Seewaldt, T., Prototyping vs. specifying: a multi-project experiment (1984) Proceedings of the 7th international conference on Software engineering, pp. 473-484. , IEEE Press, Piscataway; Cherubini, M., Venolia, G., DeLine, R., Ko, A.J., Let's go to the whiteboard: how and why software developers use drawings (2007) Proceedings of the SIGCHI conference on human factors in, computing systems, pp. 557-566; Dekel, U., Herbsleb, J.D., Notation and representation in collaborative object-oriented design: an observational study (2007) Proceedings of the 22nd annual ACM SIGPLAN conference on object-oriented programming systems and applications, pp. 261-280; Dobing, B., Parsons, J., How UML is used (2006) Commun. ACM, 49 (5), pp. 109-113; Dzidek, W.J., Arisholm, E., Briand, L.C., A realistic empirical evaluation of the costs and benefits of UML in software maintenance (2008) IEEE Trans. Softw. Eng., 34 (3), pp. 407-432; Forward, A., Lethbridge, T., Perceptions of software modeling: a survey of software practitioners (2008) Technical Report TR-2008-07, , School of Information Technology and Engineering, University of Ottawa, 800 King Edward Ave. Ottawa, Ontario, Canada K1N 6N5; Genero, M., Fernández-Sáez, A.M., Nelson, H.J., Poels, G., Piattini, M., Research review: a systematic literature review on the quality of UML models (2011) J. Database Manag., 22 (3), pp. 46-70; Grossman, M., Aronson, J.E., McCarthy, R.V., Does UML make the grade? insights from the software development community (2005) Inf. Softw. Technol., 47 (6), pp. 383-397; Heijstek, W., Chaudron, M.R.V., Empirical investigations of model size, complexity and effort in large scale, distributed model driven development processes-a case study (2009) Proceedings of the 35th Euromicro Conference on Software Engineering and Advanced Applications (SEAA 2009), , Patras, Greece; Heijstek, W., Chaudron, M.R.V., On the use of UMLdiagrams in industrial software architecture documents (2011) Technical Report TR2011-02, , Leiden Institute of Advanced Computer Science, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, The Netherlands; Herzberg, F., One more time: how do you motivate employees? (1968) Harv. Bus. Rev., 46 (1), pp. 53-62; Hutchinson, J., Whittle, J., Rouncefield, M., Kristoffersen, S., Empirical assessment of mde in industry (2011) Proceeding of the 33rd international conference on Software engineering, pp. 471-480. , ACM Press, London; Jones, C., Software defect-removal efficiency (1996) Computer, 29 (4), pp. 94-95; Jones, C., (1986) Programming Productivity, , New York: McGraw-Hill; Lange, C.F.J., Bois, B.D., Chaudron, M.R.V., Demeyer, S., An experimental investigation of UML modeling conventions (2006) Proceedings of the 9th international conference on Model Driven Engineering Languages and Systems, pp. 27-41; Lange, C.F.J., Chaudron, M.R.V., Effects of defects in UML models: an experimental investigation (2006) Proceedings of the 28th international conference on Software engineering, pp. 401-411. , In: Osterweil L. J., Rombach H. D., Soffa M. L., (eds.), ACM Press, London; Lange, C.F.J., Chaudron Michel, R.V., Muskens, J., In practice: UML software architecture and design description (2006) IEEE Softw., 23 (2), pp. 40-46; Lange, C.F.J., Chaudron, M.R.V., Muskens, J., Somers, L.J., Dortmans, H.M., An empirical investigation in quantifying inconsistency and incompleteness of UML designs (2003) Proceedings of the Workshop on Consistency Problems in UML-based Software Development; McConnell, S., (2004) Code Complete, , Redmond: Microsoft Press; Mellegård, N., Staron, M., Characterizing model usage in embedded software engineering: a case study (2010) Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, pp. 245-252; Nugroho, A., Chaudron, M.R.V., A survey into the rigor of UML use and its perceived impact on quality and productivity (2008) ESEM '08: Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement, pp. 90-99. , ACM Press, New York; Nugroho, A., Flaton, B., Chaudron, M.R.V., Empirical analysis of the relation between level of detail in UML models and defect density (2008) Proceedings of the 11th international conference on Model Driven Engineering Languages and Systems, pp. 600-614. , Springer, Berlin; Nugroho, A., Lange, C.F.J., On the relation between class-count and modeling effort (2007) Proceedings of the ACM/IEEE 10th International Conference on Model Driven Engineering Languages and Systems, 5002, pp. 93-104. , 2008 Springer, Berlin; Pareto, L., Eriksson, P., Ehnebom, S., Architectural descriptions as boundary objects in system and design work (2010) Proceedings of the 13th international conference on Model driven, engineering, pp. 406-419; Premraj, R., Nauta, G., Tang, A., van Vliet, H., The boomeranged software architect (2011) Proceedings of the 2011 Ninth Working IEEE/IFIP Conference on Software Architecture, WICSA '11, pp. 73-82. , IEEE Computer Society, USA; Shull, F., Basili, V., Boehm, B., Brown, A.W., Costa, P., Lindvall, M., Port, D., Zelkowitz, M., What we have learned about fighting defects (2002) Proceedings of the Eighth IEEE Symposium on Software Metrics, pp. 249-258. , IEEE Press, USA; Staron, M., Adopting model driven software development in industry-a case study at two companies (2006) MoDELS, pp. 57-72; Stettina, C.J., Heijstek, W., Necessary and neglected? an empirical study of internal documentation in agile software development teams (2011) Proceedings of the 29th ACM International Conference on Design of Communication (SIGDOC 2011), , Pisa, Italy, (October; Thörn, C., Gustafsson, T., Uptake of modeling practices in SME's (2008) Proceedings of the ICSE workshop on Modeling in Software Engineering (MiSE), , ACM Press, New York; Weigert, T., Weill, F., Practical experiences in using model-driven engineering to develop trustworthy computing systems (2006) Proceedings of the IEEE International Conference on Sensor Networks, , Ubiquitous, and Trustworthy, Computing","Heijstek, W.; Leiden Institute of Advanced Computer Science, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; email: heijstek@liacs.nl",,,,,,,,16191366,,,,"English","Softw. Syst. Model.",Article,"Final","",Scopus,2-s2.0-84867902259
"Issabayeva A., Nugroho A., Visser J.","55339354300;24477818100;57205471180;","Issue handling performance in proprietary software projects",2012,"IEEE International Working Conference on Mining Software Repositories",,, 6224282,"209","212",,,"10.1109/MSR.2012.6224282","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865140601&doi=10.1109%2fMSR.2012.6224282&partnerID=40&md5=7abbaacc65bcc69b708f81f3f2804ada","Tilburg University, Netherlands; Software Improvement Group, Netherlands; Radboud University Nijmegen, Netherlands","Issabayeva, A., Tilburg University, Netherlands; Nugroho, A., Software Improvement Group, Netherlands; Visser, J., Software Improvement Group, Netherlands, Radboud University Nijmegen, Netherlands","Software maintenance tasks are mainly related to fixing defects and implementing new features. Higher efficiency in performing such tasks is therefore going to reduce the costs of maintenance. A previous study involving open source systems has shown that higher software maintainability corresponds to faster speed in fixing defects [1]. In this paper we replicate the previous study by mining bug report data of three proprietary software projects. In one of the projects, a correlation between higher software maintainability and faster defect resolution is confirmed. The quality of issue handling process (e.g., issue registration accuracy and completeness, scope and complexity of issue workflow) should be considered in further research as it might explain the circumstances under which the correlation can be observed. © 2012 IEEE.","bugs; defects; maintainability; productivity; resolution time","Bug reports; bugs; Handling performance; Handling process; Higher efficiency; Open source system; Proprietary software; Registration accuracy; Software maintainability; Software-maintenance tasks; Defects; Maintainability; Maintenance; Productivity; Open systems",,,,,,"Luijten, B., Visser, J., Zaidman, A., Faster defect resolution with higher technical quality of software Proceedings of the 4th International Workshop on Software Quality and Maintainability, 2010; Heitlager, I., Kuipers, T., Visser, J., A practical model for measuring maintainability (2007) Quality of Information and Communications Technology, 2007. QUATIC 2007. 6th International Conference on the, pp. 30-39. , IEEE; (2001) ISO/IEC 9126-1: Software Engineering - Product Quality - Part 1: Quality Model, , International Organization for Standardization; Baggen, R., Schill, K., Visser, J., Standardized code quality benchmarking for improving software maintainability Proceedings of the 4th International Workshop on Software Quality and Maintainability, 2010; Kim, S., Whitehead Jr., E., How long did it take to fix bugs? (2006) Proceedings of the 2006 International Workshop on Mining Software Repositories, pp. 173-174. , ACM; Weiss, C., Premraj, R., Zimmermann, T., Zeller, A., How long will it take to fix this bug? (2007) Proceedings of the Fourth International Workshop on Mining Software Repositories, p. 1. , IEEE Computer Society; Bijlsma, D., Ferreira, M., Luijten, B., Visser, J., Faster issue resolution with higher technical quality of software (2011) Software Quality Journal, pp. 1-21; Luijten, B., Visser, J., Zaidman, A., Assessment of issue handling efficiency (2010) Proceedings of the 7th IEEE Working Conference on Mining Software Repositories, pp. 94-97. , IEEE","Issabayeva, A.; Tilburg UniversityNetherlands; email: aigerim.issabay@gmail.com",,,,"2012 9th IEEE Working Conference on Mining Software Repositories, MSR 2012","2 June 2012 through 3 June 2012","Zurich",92009,21601852,9781467317610,,,"English","IEEE Int. Working Conf. Min Softw. Repos.",Conference Paper,"Final","All Open Access, Green",Scopus,2-s2.0-84865140601
"De Groot J., Nugroho A., Bäck T., Visser J.","55318808300;24477818100;57203312747;57205471180;","What is the value of your software?",2012,"2012 3rd International Workshop on Managing Technical Debt, MTD 2012 - Proceedings",,, 6225998,"37","44",,12,"10.1109/MTD.2012.6225998","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864148471&doi=10.1109%2fMTD.2012.6225998&partnerID=40&md5=79e98b75b81cab801d7c43ca146550db","Software Improvement Group, Netherlands; LIACS, Leiden University, Netherlands; Radboud University Nijmegen, Netherlands","De Groot, J., Software Improvement Group, Netherlands; Nugroho, A., Software Improvement Group, Netherlands; Bäck, T., LIACS, Leiden University, Netherlands; Visser, J., Software Improvement Group, Netherlands, Radboud University Nijmegen, Netherlands","Assessment of the economic value of software systems is useful in contexts such as capitalization on the balance sheet and due diligence prior to acquisition. Current accounting practice in determining software value is based on the cost spent in software development. This approach fails to account for the efficiency with which software has been produced or the quality of the product. This paper proposes three alternative models for determining the production value of software, based on the notions of technical debt and interest. We applied the models to 367 proprietary systems developed by a range of different organisations using a range of different programming languages. We present the valuation results and discuss the weaknesses and strengths of the models. © 2012 IEEE.","capitalization; due diligence; software quality; software value; technical debt","Accounting practices; Balance sheets; capitalization; Due diligence; Economic values; Production value; Proprietary systems; Software Quality; Software systems; technical debt; Computer software selection and evaluation; Risk assessment; Cost accounting",,,,,,"Boehm, B., Papaccio, P., Understanding and controlling software costs (1988) Software Engineering, IEEE Transactions on, 14 (10), pp. 1462-1477. , oct; Melville, N., Kraemer, K.L., Gurbaxani, V., Review: Information technology and organizational performance: An integrative model of IT business value (2004) MIS Quarterly, 28 (2), pp. 283-322; (2009) U.S. GAAP Codification of Accounting Standards, Codification Topic 350: Intangibles-Goodwill and Other (ASC 350), , Financial Accounting Standards Board (FASB); (1998) International Accounting Standard 38 (IAS 38), Intangible Assets, , International Financial Report Standards (IFRS), First issued revised 2004, amendment 2008; Walker, R.G., Oliver, G.R., Accounting for expenditure on software development for internal use (2005) Abacus, 41 (1), pp. 66-91; Aboody, D., Lev, B., The value relevance of intangibles: The case of software capitalization (1998) Journal of Accounting Research, 36 (1998), p. 161; De Groot, J., (2011) Incorporating Software Quality in the Capitalization of Software as an Asset, , MSc thesis, Leiden University; Cunningham, W., The WyCash portfolio management system (1993) ACM SIGPLAN OOPS Messenger, 4 (2), pp. 29-30; Nugroho, A., Visser, J., Kuipers, T., An empirical model of technical debt and interest (2011) Proceeding of the 2nd International Workshop on Managing Technical Debt, pp. 1-8. , ACM; Heitlager, I., Kuipers, T., Visser, J., A practical model for measuring maintainability Quality of Information and Communications Technology, 6th International Conference on the Quality of Information and Communications Technology, QUATIC 2007, Lisbon, Portugal, September 12-14, 2007, Proceedings, 2007, pp. 30-39. , R. J. Machado, F. B. e Abreu, and P. R. da Cunha, Eds. IEEE Computer Society; Baggen, R., Correia, J., Schill, K., Visser, J., Standardized code quality benchmarking for improving software maintainability (2011) Software Quality Journal, pp. 1-21; (2012) CAST Report on Application Software Health, , CAST; Sneller, L., Bots, J., A review of quantitative IT value research (2006) Proceedings of the 13th European Conference on IT Evaluation, pp. 444-452; Ben-Menachem, M., Gavious, I., Accounting software assets: A valuation model for software (2007) Journal of Information Systems, 21, pp. 117-132","De Groot, J.; Software Improvement GroupNetherlands; email: j.degroot@sig.eu",,,,"2012 3rd International Workshop on Managing Technical Debt, MTD 2012","5 June 2012 through 5 June 2012","Zurich",91245,,9781467317498,,,"English","Int. Workshop Managing Tech. Debt, MTD - Proc.",Conference Paper,"Final","",Scopus,2-s2.0-84864148471
"Nugroho A., Visser J., Kuipers T.","24477818100;57205471180;55936354600;","An empirical model of technical debt and interest",2011,"Proceedings - International Conference on Software Engineering",,,,"1","8",,80,"10.1145/1985362.1985364","https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960590207&doi=10.1145%2f1985362.1985364&partnerID=40&md5=691301786cad23be57779756bc0c1e60","Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands","Nugroho, A., Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands; Visser, J., Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands; Kuipers, T., Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands","Cunningham introduced the metaphor of technical debt as guidance for software developers that must trade engineering quality against short-term goals. We revisit the technical debt metaphor, and translate it into terms that can help IT executives better understand their IT investments. An approach is proposed to quantify debts (cost to fix technical quality issues) and interest (extra cost spent on maintenance due to technical quality issues). Our approach is based on an empirical assessment method of software quality developed at the Software Improvement Group (SIG). The core part of the technical debt calculation is constructed on the basis of empirical data of 44 systems that are currently being monitored by SIG. In a case study, we apply the approach to a real system, and discuss how the results provide useful insights on important questions related to IT investment such as the return on investment (ROI) in software quality improvement. © 2011 ACM.","cost; effort; estimation; maintenance; measurement; software economics","Core part; effort; Empirical assessment; Empirical data; Empirical model; Engineering quality; IT investments; Real systems; Return on investments; Software developer; software economics; Software Quality; Software quality improvements; Technical quality; Computer software selection and evaluation; Economics; Investments; Profitability; Software engineering; Computer software maintenance",,,,,,"Alves, T., Ypma, C., Visser, J., Deriving metric thresholds from benchmark data (2010) 26th Int. Conf. on Software Maintenance, , IEEE; Baggen, R., Schill, K., Visser, J., Standardized code quality benchmarking for improving software maintainability Proc. of the 4th International Workshop on Software Quality and Maintainability (SQM'10), 2010; Bijlsma, D., (2010) Indicators of Issue Handling Efficiency, , Master's thesis, University of Amsterdam; Brown, N., Cai, Y., Guo, Y., Kazman, R., Kim, M., Kruchten, P., Lim, E., Ozkaya, I., Managing technical debt in software-reliant systems (2010) Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, pp. 47-52. , ACM; (2010) CAST Worldwide Apllication Software Quality Study: Summary of Key Findings, , CAST; Chidamber, S., Darcy, D., Kemerer, C., Managerial use of metrics for object-oriented software: An exploratory analysis (2002) Software Engineering, IEEE Transactions on, 24 (8), pp. 629-639; Chin, S., Huddleston, E., Bodwell, W., Gat, I., The economics of technical debt (2010) Cutter IT Journal, 23 (10), pp. 11-15; Cunningham, W., The WyCash portfolio management system (1993) ACM SIGPLAN OOPS Messenger, 4 (2), pp. 29-30; Abreu, B.E., Melo, W., Evaluating the impact of object-oriented design on software quality (2002) Software Metrics Symposium, 1996., Proceedings of the 3rd International, pp. 90-99. , IEEE; Eick, S., Graves, T., Karr, A., Marron, J., Mockus, A., Does code decay? assessing the evidence from change management data (2002) Software Engineering, IEEE Transactions on, 27 (1), pp. 1-12; Fowler, M., (2009) Technical Debt Quadrant; Harrison, R., Counsell, S., Nithi, R., Experimental assessment of the effect of inheritance on the maintainability of object-oriented systems (2000) Journal of Systems and Software, 52 (2-3), pp. 173-179; Heitlager, I., Kuipers, T., Visser, J., A practical model for measuring maintainability (2007) Quality of Information and Communications Technology, 2007. QUATIC 2007. 6th International Conference on the, pp. 30-39. , IEEE; (2001) ISO/IEC 9126-1: Software Engineering - Product Quality - Part 1: Quality Model, , International Organization for Standardization; Jones, C., Backfiring: Converting lines of code to function points (2002) Computer, 28 (11), pp. 87-88; Letouzey, J., Coq, T., The SQALE Analysis Model An analysis model compliant with the representation condition for assessing the Quality of Software Source Code (2010) VALID; McConnell, S., 10x Software Development; (2007) SPR Programming Languages Table Ver. PLT2007c, , Software Productivity Research, LLC. December","Nugroho, A.; Software Improvement Group, P.O. Box 94914, 1090 GX Amsterdam, Netherlands; email: a.nugroho@sig.eu",,"ACM SIGSOFT;IEEE CS",,"2nd International Workshop on Managing Technical Debt, MTD 2011, Co-located with the 33rd International Conference on Software Engineering, ICSE 2011","23 May 2011 through 23 May 2011","Waikiki, Honolulu, HI",85674,02705257,9781450305860,PCSED,,"English","Proc Int Conf Software Eng",Conference Paper,"Final","",Scopus,2-s2.0-79960590207
"Nugroho A., Chaudron M.R.V., Arisholm E.","24477818100;6602727769;6602764222;","Assessing UML design metrics for predicting fault-prone classes in a Java system",2010,"Proceedings - International Conference on Software Engineering",,, 5463285,"21","30",,15,"10.1109/MSR.2010.5463285","https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953742026&doi=10.1109%2fMSR.2010.5463285&partnerID=40&md5=721da623d7a9860b72b72b10b051f529","LIACS, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Simula Research Laboratory, PO Box 134, N-1325 Lysaker, Norway","Nugroho, A., LIACS, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Chaudron, M.R.V., LIACS, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Arisholm, E., Simula Research Laboratory, PO Box 134, N-1325 Lysaker, Norway","Identifying and fixing software problems before implementation are believed to be much cheaper than after implementation. Hence, it follows that predicting fault-proneness of software modules based on early software artifacts like software design is beneficial as it allows software engineers to perform early predictions to anticipate and avoid faults early enough. Taking this motivation into consideration, in this paper we evaluate the usefulness of UML design metrics to predict fault-proneness of Java classes. We use historical data of a significant industrial Java system to build and validate a UML-based prediction model. Based on the case study we have found that level of detail of messages and import coupling-both measured from sequence diagrams, are significant predictors of class fault-proneness. We also learn that the prediction model built exclusively using the UML design metrics demonstrates a better accuracy than the one built exclusively using code metrics. © 2010 IEEE.","Classification; Defect; Fault; Logistic regression; Prediction; Quality","Code metrics; Early prediction; Fault; Fault-prone; Historical data; Java class; Java system; Level of detail; Logistic regressions; Prediction model; Prediction quality; Sequence diagrams; Software artifacts; Software engineers; Software modules; Software problems; UML design; Computer software selection and evaluation; Data flow analysis; Defects; Design; Forecasting; Mathematical models; Software design",,,,,,"SPSS Statistics Release 17.0.0 for Macintosh; Arisholm, E., Briand, L.C., Predicting fault-prone components in a java legacy system (2006) ISESE '06: Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering, pp. 8-17. , New York, NY, USA, ACM; Arisholm, E., Briand, L.C., Johannessen, E.B., (2008) A Systematic and Comprehensive Investigation of Methods to Build and Evaluate Fault Prediction Models, , Technical report, Simula Research Laboratory; Basili, V.R., Briand, L.C., Melo, W.L., A validation of object-oriented design metrics as quality indicators (1996) IEEE Trans. Softw. Eng., 22 (10), pp. 751-761; Briand, L., Devanbu, P., Melo, W., An investigation into coupling measures for C++ (1997) ICSE '97: Proceedings of the 19th International Conference on Software Engineering, pp. 412-421. , New York, NY, USA, ACM Press; Briand, L., Melo, W., Wüst, J., Assessing the Applicability of Fault-Proneness Models Across Object-Oriented Software Projects (2002) IEEE Transactions on Software Engineering, pp. 706-720; Briand, L.C., Wüst, J., Daly, J.W., Porter, D.V., Exploring the relationship between design measures and software quality in object-oriented systems (2000) J. Syst. Softw., 51 (3), pp. 245-273; Catal, C., Diri, B., A systematic review of software fault prediction studies (2009) Expert Systems with Applications, 36 (4), pp. 7346-7354; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Trans. Softw. Eng., 20 (6), pp. 476-493; El Emam, K., Melo, W., Machado, J.C., The prediction of faulty classes using object-oriented design metrics (2001) Journal of Systems and Software, 56 (1), pp. 63-75; Field, A., (2005) Discovering Statistics Using SPSS, , SAGE, London 2nd edition; Genero, M., Manso, E., Visaggio, A., Canfora, G., Piattini, M., Building measure-based prediction models for UML class diagram maintainability (2007) Empirical Software Engineering, 12 (5), pp. 517-549. , 10; Gyimothy, T., Ferenc, R., Siket, I., Empirical validation of object-oriented metrics on open source software for fault prediction (2005) IEEE Trans. Softw. Eng., 31 (10), pp. 897-910; Hall, M., Frank, E., Holmes, G., Pfahringer, B., Reutemann, P., Witten, I.H., The weka data mining software: An update (2009) SIGKDD Explorations, 11 (1); Hosmer, D.W., Lemeshow, S., (2000) Applied Logistic Regression, , Wiley-Interscience, 2nd edition; Janes, A., Scotto, M., Pedrycz, W., Russo, B., Stefanovic, M., Succi, G., Identification of defect-prone classes in telecommunication software systems using design metrics (2006) Information Sciences, 176 (24), pp. 3711-3734; Jiang, Y., Cuki, B., Menzies, T., Bartlow, N., Comparing design and code metrics for software quality prediction (2008) Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, pp. 11-18. , ACM New York, NY, USA; Khoshgoftaar, T., Seliya, N., Comparative assessment of software quality classification techniques: An empirical case study (2004) Empirical Software Engineering, 9 (3), pp. 229-257; Khoshgoftaar, T.M., Seliya, N., Fault prediction modeling for software quality estimation: Comparing commonly used techniques (2003) Empirical Softw. Engg., 8 (3), pp. 255-283; McCabe, T.J., A complexity measure (1976) IEEE Trans. Softw. Eng., 2 (4), pp. 308-320; Moser, R., Pedrycz, W., Succi, G., Comparative analysis of the efficiency of change metrics and static code attributes for defect prediction (2008) Proceedings of the 30th International Conference on Software Engineering, pp. 181-190; Nugroho, A., Level of detail in UML models and its impact on model comprehension: A controlled experiment (2009) Information and Software Technology, 51 (12), pp. 1670-1685; Nugroho, A., Chaudron, M., Evaluating the Impact of UML Modeling on Software Quality: An Industrial Case Study (2009) Model Driven Engineering Languages and Systems: 12th International Conference, Models 2009, Denver, Co, USA, October 4-9, 2009, Proceedings, p. 181. , Springer; Nugroho, A., Flaton, B., Chaudron, M.R.V., Empirical analysis of the relation between level of detail in UML models and defect density (2008) LNCS, 5301, pp. 600-614. , Czarnecki, editor, Proceedings of the 11th International Conference on Model Driven Engineering Languages and Systems (MODELS), Springer-Verlag; Ohlsson, N., Alberg, H., Predicting fault-prone software modules in telephone switches (1996) IEEE Trans. Softw. Eng., 22 (12), pp. 886-894; Ohlsson, N., Zhao, M., Helander, M., Application of multivariate analysis for software fault prediction (1998) Software Quality Journal, 7 (1), pp. 51-66; Ostrand, T.J., Weyuker, E.J., How to measure success of fault prediction models (2007) SOQUA '07 Fourth International Workshop on Software Quality Assurance, pp. 25-30. , New York, NY, USA, ACM; The UML Design Quality Metrics Tool, , http://www.sdmetrics.com; Subramanyam, R., Krishnan, M.S., Empirical analysis of CK metrics for object-oriented design complexity: Implications for software defects (2003) IEEE Trans. Softw. Eng., 29 (4), pp. 297-310; Zhao, M., Wohlin, C., Ohlsson, N., Xie, M., A comparison between software design and code metrics for the prediction of software fault content (1998) Information and Software Technology, 40 (14), pp. 801-809; Zhou, Y., Leung, H., Empirical analysis of object-oriented design metrics for predicting high and low severity faults (2006) IEEE Transactions on Software Engineering, 32 (10), pp. 771-789","Nugroho, A.; LIACS, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; email: anugroho@liacs.nl",,,,"7th IEEE Working Conference on Mining Software Repositories, MSR 2010, Co-located with the 2010 ACM/IEEE International Conference on Software Engineering, ICSE 2010","2 May 2010 through 3 May 2010","Cape Town",80678,02705257,9781424468034,PCSED,,"English","Proc Int Conf Software Eng",Conference Paper,"Final","",Scopus,2-s2.0-77953742026
"Nugroho A.","24477818100;","Level of detail in UML models and its impact on model comprehension: A controlled experiment",2009,"Information and Software Technology","51","12",,"1670","1685",,45,"10.1016/j.infsof.2009.04.007","https://www.scopus.com/inward/record.uri?eid=2-s2.0-70349462678&doi=10.1016%2fj.infsof.2009.04.007&partnerID=40&md5=e3991b591b9a1317a9d08ca36add8143","Leiden Institute of Advanced Computer Science (LIACS), Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands","Nugroho, A., Leiden Institute of Advanced Computer Science (LIACS), Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands","Previous studies have shown that the style and rigor used in UML models vary widely across software projects [1-3]. However, notwithstanding the varying use of styles and rigor, little research has been conducted to investigate the drivers and effects of using different styles and rigor in modeling on software development. In this paper, we evaluate Level of Detail (LoD) in UML models as a form of style and rigor in UML modeling. Using a UML model of a library system, we experimentally investigate the impact of LoD on model comprehension. More specifically, we explore whether LoD in UML models affects the correctness and efficiency in comprehending UML models. Using two independent groups of graduate students majoring in computer science, we performed a controlled experiment. The results of the experiment confirm the significant effect of LoD in UML models on model comprehension. Nevertheless, replication of this study is necessary, especially in contexts that involve professional software engineers, to improve the generalizability of the results. © 2009 Elsevier B.V. All rights reserved.","Comprehension; Experiment; Level of detail; Model quality; UML model","Comprehension; Controlled experiment; Experiment confirm; Graduate students; Level of detail; Library systems; Little research; Model quality; Professional software; Software development; Software project; UML model; UML Modeling; Computer control systems; Computer software selection and evaluation; Software engineering; Experiments",,,,"Stichting voor de Technische Wetenschappen, STW","This work was accomplished under the FINESSE (des7015) project supported by the STW (Stichting Technische Wetenschappen), The Netherlands. I would like to thank the students of Software Architecting 2007 at TU/e who have participated in the experiment. I also thank the editors of this Special Issue on Quality in Modeling, as well as the anonymous reviewers for their constructive feedbacks that help improve this paper. Finally, I would like to express my appreciation to Dr. Michel R.V. Chaudron without whose valuable contribution this work would not have been possible.","Lange, C.F.J., Chaudron, M.R.V., Muskens, J., In practice: UML software architecture and design description (2006) IEEE Software, 23 (2), pp. 40-46; Nugroho, A., Chaudron, M.R.V., Managing the quality of UML models in practice (2008) Model-Driven Software Development: Integrating Quality Assurance, Information Science Reference, pp. 1-36. , Rech J., and Bunse C. (Eds), IGI Publishing, Hershey, PA (Chapter 1); Nugroho, A., Chaudron, M.R.V., A survey into the rigor of UML use and its perceived impact on quality and productivity (2008) ESEM'08: Proceedings of the Second ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, pp. 90-99. , ACM, New York, NY, USA; The Unified Modeling Language, , http://www.uml.org; Wong, K., Sun, D., On evaluating the layout of UML class diagrams for program comprehension (2005) IWPC'05: Proceedings of the 13th International Workshop on Program Comprehension, pp. 317-326. , IEEE Computer Society, Washington, DC, USA; Purchase, H.C., Colpoys, L., McGill, M., Carrington, D., Britton, C., UML class diagram syntax: an empirical study of comprehension (2001) APVis'01: Proceedings of the 2001 Asia-Pacific Symposium on Information Visualisation, pp. 113-120. , Australian Computer Society Inc., Darlinghurst, Australia; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering: An Introduction, , Kluwer Academic Publishers., Norwell, MA, USA; Otero, M.C., Dolado, J., Evaluation of the comprehension of the dynamic modeling in UML (2004) Information and Software Technology, 46 (1), pp. 35-53; Glezer, C., Last, M., Nachmany, E., Shoval, P., Quality and comprehension of UML interaction diagrams - an experimental comparison (2005) Information and Software Technology, 47 (10), pp. 675-692; Torchiano, M., Empirical assessment of UML static object diagrams (2004) International Workshop on Program Comprehension, pp. 226-230; Briand, L.C., Labiche, Y., Penta, M.D., Yan-Bondoc, H.D., An experimental investigation of formality in UML-based development (2005) IEEE Transactions on Software Engineering, 31 (10), pp. 833-849; Staron, M., Kuzniarz, L., Wohlin, C., Empirical assessment of using stereotypes to improve comprehension of UML models: a set of experiments (2006) Journal of Systems and Software, 79 (5), pp. 727-742; Ricca, F., Penta, M.D., Torchiano, M., Tonella, P., Ceccato, M., The role of experience and ability in comprehension tasks supported by UML stereotypes (2007) ICSE'07: Proceedings of the 29th International Conference on Software Engineering, pp. 375-384. , IEEE Computer Society, Washington, DC, USA; Genero, M., Cruz-Lemus, J.A., Caivano, D., Abrahao, S., Insfran, E., Carsí, J.A., Assessing the influence of stereotypes on the comprehension of UML sequence diagrams: a controlled experiment (2008) MoDELS'08: Proceedings of the 11th International Conference on Model Driven Engineering Languages and Systems, pp. 280-294. , Springer-Verlag, Berlin, Heidelberg; Cruz-Lemus, J., Genero, M., Morasca, S., Piattini, M., Assessing the understandability of UML statechart diagrams with composite states - a family of empirical studies Empirical Software Engineering, , http://dx.doi.org/10.1007/s10664-009-9106-z, in press. Available from; Genero, M., Manso, E., Visaggio, A., Canfora, G., Piattini, M., Building measure-based prediction models for UML class diagram maintainability (2007) Empirical Software Engineering, 12 (5), pp. 517-549; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: an experimental evaluation (2006) IEEE Transactions on Software Engineering, 32 (6), pp. 365-381; Nugroho, A., Experiment Materials, , http://www.liacs.nl/~anugroho; Briand, L., Labiche, Y., A UML-based approach to system testing (2002) Software and Systems Modeling, 1 (1), pp. 10-42; Dobing, B., Parsons, J., How UML is used (2006) Communications of the ACM, 49 (5), pp. 109-113; Oppenheim, A.N., (1996) Questionnaire Design and Attitude Measurement, , Heinemann Educational Books Ltd; http://www.spss.com, SPSS Statistical Analysis Tool; Krus, D.J., Krus, P.H., Lost: Mccall's T scores: Why? (1977) Educational and Psychological Measurement, 37 (1), pp. 257-261; Nugroho, A., Flaton, B., Chaudron, M.R.V., Empirical analysis of the relation between level of detail in UML models and defect density (2008) LNCS, 5301, pp. 600-614. , Czarnecki (Ed, Proceedings of the 11th International Conference on Model Driven Engineering Languages and Systems MODELS, Springer-Verlag","Nugroho, A.; Leiden Institute of Advanced Computer Science (LIACS), Niels Bohrweg 1, 2333 CA Leiden, Netherlands; email: anugroho@liacs.nl",,,,,,,,09505849,,ISOTE,,"English","Inf Software Technol",Article,"Final","",Scopus,2-s2.0-70349462678
"Nugroho A., Chaudron M.R.V.","24477818100;6602727769;","Evaluating the impact of UML modeling on software quality: An industrial case study",2009,"Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","5795 LNCS",,,"181","195",,17,"10.1007/978-3-642-04425-0_14","https://www.scopus.com/inward/record.uri?eid=2-s2.0-77249165735&doi=10.1007%2f978-3-642-04425-0_14&partnerID=40&md5=905e31a5b6afe0e871ebae6ad5ee8298","LIACS, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands","Nugroho, A., LIACS, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Chaudron, M.R.V., LIACS, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands","The contribution of formal modeling approaches in software development has always been a subject of debates. The proponents of model-driven development argue that big upfront designs although require substantial investment will payoff later in the implementation phase in terms of increased productivity and quality. On the other hand, software engineers who are not very keen on modeling perceive the activity as simply a waste of time and money without any real contribution to the final software product. Considering present advancement of model-based software development in software industry, we are challenged to investigate the real contribution of modeling in software development. Therefore, in this paper we report on an empirical investigation on the impact of UML modeling on the quality of software system. In particular, we focus on defect density as a measure of software quality. Based on a significant industrial case study, we have found that the use of UML modeling potentially reduces defect density in software system. © 2009 Springer Berlin Heidelberg.","Case Study; Complexity; Coupling; Defect Density; UML","Coupling defects; Empirical investigation; Formal modeling; Increased productivity; Industrial case study; Model driven development; Model-based; Quality of softwares; Software development; Software engineers; Software industry; Software products; Software Quality; Software systems; Substantial investments; UML Modeling; Defect density; Defects; Formal methods; Linguistics; Models; Research; Software design; Computer software selection and evaluation",,,,,,"Staron, M., Kuzniarz, L., Wohlin, C., Empirical assessment of using stereotypes to improve comprehension of UML models: A set of experiments (2006) J. Syst. Softw, 79 (5), pp. 727-742; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., The role of experience and ability in comprehension tasks supported by UML stereotypes (2007) ICSE 2007: Proceedings of the 29th international conference on Software Engineering, pp. 375-384. , Washington, DC, USA, pp, IEEE Computer Society, Los Alamitos; Genero, M., Cruz-Lemus, J.A., Caivano, D., Abrahao, S., Insfran, E., Carsi, J.A., Assessing the influence of stereotypes on the comprehension of UML sequence diagrams: A controlled experiment (2008) LNCS, 5301, pp. 280-294. , Czarnecki, K, Ober, I, Bruel, J.-M, Uhl, A, Völter, M, eds, MODELS 2008, Springer, Heidelberg; Cruz-Lemus, J., Genero, M., Morasca, S., Piattini, M., Assessing the the understandability of UML statechart diagrams with composite states - a familiy of empirical studies (2009) Empirical Software Engineering, , to appear; Briand, L.C., Labiche, Y., Penta, M.D., Yan-Bondoc, H.D., An experimental investigation of formality in UML-based development (2005) IEEE Transactions on Software Engineering, 31 (10), pp. 833-849; Otero, M.C., Dolado, J., Evaluation of the comprehension of the dynamic modeling in UML (2004) Information and Software Technology, 46 (1), pp. 35-53; Glezer, C., Last, M., Nachmany, E., Shoval, P., Quality and comprehension of UML interaction diagrams-an experimental comparison (2005) Information and Software Technology, 47 (10), pp. 675-692; Torchiano, M., Empirical assessment of UML static object diagrams (2004) International Workshop on Program Comprehension, pp. 226-230; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Transactions on Software Engineering, 32 (6), pp. 365-381; Nugroho, A., Flaton, B., Chaudron, M.R.V., Empirical analysis of the relation between level of detail in UML models and defect density (2008) LNCS, 5301, pp. 600-614. , Czarnecki, K, Ober, I, Bruel, J.-M, Uhl, A, Völter, M, eds, MODELS 2008, Springer, Heidelberg; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2000) Experimentation in software engineering: An introduction, , Kluwer Academic Publishers, Norwell; McCabe, T.J., A complexity measure (1976) IEEE Trans. Softw. Eng, 2 (4), pp. 308-320; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Trans. Softw. Eng, 20 (6), pp. 476-493; Subramanyam, R., Krishnan, M.S., Empirical analysis of ck metrics for objectoriented design complexity: Implications for software defects (2003) IEEE Trans. Softw. Eng, 29 (4), pp. 297-310; Khoshgoftaar, T.M., Allen, E.B., Ordering fault-prone software modules (2003) Software Quality Control, 11 (1), pp. 19-37; SDMetrics, The UML design, , http://www.sdffiet3rics.com, quality metrics tool; Rutherford, A., (2001) Introducing ANOVA and ANCOVA: A GLM approach, , Sage, Thousand Oaks; Mann, H.B., Whitney, D.R., On a test of whether one of two random variables is stochastically larger than the other (1947) The Annals of Mathematical Statistics, 18 (1), pp. 50-60; Koru, A.G., Liu, H., An investigation of the effect of module size on defect prediction using static measures (2005) SIGSOFT Softw. Eng. Notes, 30 (4), pp. 1-5; Fenton, N.E., Neil, M., A critique of software defect prediction models (1999) IEEE Trans. Softw. Eng, 25 (5), pp. 675-689; Nugroho, A., Chaudron, M.R.V., A survey into the rigor of UML use and its perceived impact on quality and productivity (2008) ESEM 2008: Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement, pp. 90-99. , ACM, New York; Nugroho, A., Chaudron, M.R.V.: Managing the quality of UML models in practice. In: Rech, J., Bunse, C. (eds.) Model-Driven Software Development: Integrating Quality Assurance. Information Science Reference, pp. 1-36. IGI Publishing, Hershey (2008)","Nugroho, A.; LIACS, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; email: anugroho@liacs.nl",,"ACM;Springer;IEEE Computer Society;Aerospace",,"12th International Conference on Model Driven Engineering Languages and Systems, MODELS 2009","4 October 2009 through 9 October 2009","Denver, CO",79313,03029743,3642044247; 9783642044243,,,"English","Lect. Notes Comput. Sci.",Conference Paper,"Final","",Scopus,2-s2.0-77249165735
"Nugroho A., Flaton B., Chaudron M.R.V.","24477818100;25721995700;6602727769;","Empirical analysis of the relation between level of detail in UML models and defect density",2008,"Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","5301 LNCS",,,"600","614",,17,"10.1007/978-3-540-87875-9_42","https://www.scopus.com/inward/record.uri?eid=2-s2.0-56849108580&doi=10.1007%2f978-3-540-87875-9_42&partnerID=40&md5=3dbb4a4371548c926648068455545f02","LIACS, Leiden University, Niels Bohrweg 1, Leiden 2333 CA, Netherlands; TU Eindhoven, PO Box 513, Eindhoven 5600 MB, Netherlands","Nugroho, A., LIACS, Leiden University, Niels Bohrweg 1, Leiden 2333 CA, Netherlands; Flaton, B., TU Eindhoven, PO Box 513, Eindhoven 5600 MB, Netherlands; Chaudron, M.R.V., LIACS, Leiden University, Niels Bohrweg 1, Leiden 2333 CA, Netherlands, TU Eindhoven, PO Box 513, Eindhoven 5600 MB, Netherlands","This paper investigates the relation between the level of detail (LoD) in UML models and defect density of the associated implementation. We propose LoD measures that are applicable to both class- and sequence diagrams. Based on empirical data from an industrial software project we have found that classes with higher LoD, calculated using sequence diagram LoD metrics, correlates with lower defect density. Overall, this paper discusses a novel and practical approach to measure LoD in UML models and describes its application to a significant industrial case study. © 2008 Springer-Verlag Berlin Heidelberg.","Correlation analyses; Design metrics; Quality measure; Unified modeling language","Linguistics; Models; Query languages; Unified Modeling Language; Correlation analyses; Empirical analyses; Empirical datums; Industrial case studies; Industrial softwares; Level of details; Quality measure; Sequence diagrams; UML models; Defect density",,,,,,"Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Trans. Softw. Eng, 20 (6), pp. 476-493; Gyimothy, T., Ferenc, R., Siket, I., Empirical validation of object-oriented metrics on open source software for fault prediction (2005) IEEE Trans. Softw. Eng, 31 (10), pp. 897-910; Subramanyam, R., Krishnan, M.S., Empirical analysis of ck metrics for object-oriented design complexity: Implications for software defects (2003) IEEE Trans. Softw. Eng, 29 (4), pp. 297-310; Brito e Abreu, F., Melo, W.: Evaluating the impact of object-oriented design on software quality. In: METRICS 1996: Proceedings of the 3rd International Software Metrics Symposium. IEEE Computer Society Press, Los Alamitos (1996); Janes, A., Scotto, M., Pedrycz, W., Russo, B., Stefanovic, M., Succi, G., Identification of defect-prone classes in telecommunication software systems using design metrics (2006) Information Sciences, 176 (24), pp. 3711-3734; Succi, G., Pedrycz, W., Stefanovic, M., Miller, J., Practical assessment of the models for identification of defect-prone classes in object-oriented commercial systems using design metrics (2003) Journal of Systems and Software, 65 (1), pp. 1-12; El Emam, K., Melo, W., Machado, J.C., The prediction of faulty classes using object-oriented design metrics (2001) Journal of Systems and Software, 56 (1), pp. 63-75; Basili, V.R., Briand, L.C., Melo, W.L., A validation of object-oriented design metrics as quality indicators (1996) IEEE Trans. Softw. Eng, 22 (10), pp. 751-761; Dobing, B., Parsons, J., How UML is used (2006) Commun. ACM, 49 (5), pp. 109-113; The UML design, , http://www.sdmetrics.com, quality metrics tool; Chillarege, R., Kao, W.L., Condit, R.G., Defect type and its impact on the growth curve (1991) Proceedings of the 13th international conference on Software engineering, pp. 246-255. , IEEE Computer Society Press, Los Alamitos; Chillarege, R., Bhandari, I.S., Chaar, J.K., Halliday, M.J., Moebus, D.S., Ray, B.K., Wong, M.Y., Orthogonal defect classification-a concept for in-process measurements (1992) IEEE Transactions on Software Engineering, 18 (11), pp. 943-956; IEEE standard classification for software anomalies (1994) IEEE Std 1044-1993, , IEEE; Lange, C.F.J., Chaudron, M.R.V., Muskens, J., Practice: UML software architecture and design description (2006) IEEE Software, 23 (2), pp. 40-46; Nugroho, A., Chaudron, M.R.V., Managing the quality of UML models in practice (2008) Model-Driven Software Development: Integrating Quality Assurance, , Rech, J, Bunse, C, eds, Idea Group Inc; Nugroho, A., Chaudron, M.R.V., A survey into the rigor of UML use and its perceived impact on quality and productivity (2008) 2nd International Symposium of Empirical Software Engineering and Measurement; Briand, L.C., Labiche, Y., Penta, M.D., Yan-Bondoc, H.D., An experimental investigation of formality in UML-based development (2005) IEEE Transactions on Software Engineering, 31 (10), pp. 833-849","Nugroho, A.; LIACS, Niels Bohrweg 1, Leiden 2333 CA, Netherlands; email: anugroho@liacs.nl",,"ACM Special Interest Group on Software Engineering;IEEE Computer Society",,"11th International Conference on Model Driven Engineering Languages and Systems, MoDELS 2008","28 September 2008 through 3 October 2008","Toulouse",74288,03029743,3540878742; 9783540878742,,,"English","Lect. Notes Comput. Sci.",Conference Paper,"Final","",Scopus,2-s2.0-56849108580
"Nugroho A., Chaudron M.R.V.","24477818100;6602727769;","A survey into the rigor of UML use and its perceived impact on quality and productivity",2008,"ESEM'08: Proceedings of the 2008 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement",,,,"90","99",,47,"10.1145/1414004.1414020","https://www.scopus.com/inward/record.uri?eid=2-s2.0-62949180158&doi=10.1145%2f1414004.1414020&partnerID=40&md5=c78f0ea4a2853480de137c01eca0653a","Leiden Institute of Advanced Computer Science, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands","Nugroho, A., Leiden Institute of Advanced Computer Science, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; Chaudron, M.R.V., Leiden Institute of Advanced Computer Science, Leiden University, Niels Bohrweg 1, 2333 CA Leiden, Netherlands","The UML (Unified Modeling Language) has become the de facto standard for software modeling in the software industry. Despite its wide acceptance, little is known about how UML is used in practice, let alone the challenges and difficulties faced by engineers who work with this modeling notation. In this paper, we provide empirical findings from a survey on the use of UML amongst 80 professional software engineers. We explore software engineers' opinions on common styles of using UML and how they perceive the impact of using UML on productivity and quality in software development. One of the results reveals that the impact of using the UML on productivity is perceived mostly in the design, analysis, and implementation phases. Copyright 2008 ACM.","Completeness; Consistency; Correspondence; Level of detail; Unified modeling language","Computer software selection and evaluation; Engineering; Linguistics; Software engineering; Surveys; Completeness; Consistency; Correspondence; De facto standards; Empirical findings; Implementation phasis; Level of detail; Modeling notations; Professional softwares; Software development; Software engineers; Software industries; Software modeling; UML(unified modeling language); Unified Modeling Language",,,,,,"A. Abdurazik and J. Offutt. Using UML collaboration diagrams for static checking and test generation. In A. Evans, S. Kent, and B. Selic, editors, UML 2000 - The Unified Modeling Language. Advancing the Standard. Third International Conference, York, UK, October 2000, Proceedings, 1939, pages 383-395. Springer, 2000; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of uml documentation on software maintenance: An experimental evaluation (2006) IEEE Transactions on Software Engineering, 32 (6), pp. 365-381; F. Basanieri, A. Bertolino, and E. Marchetti. The cow-suite approach to planning and deriving test suites in uml projects. UML 2002: The Unified Modeling Language, pages 275-303, 2002; Bernard, H.R., Killworth, P., Kronenfeld, D., Sailer, L., The problem of informant accuracy: The validity of retrospective data (1984) Annual Review of Anthropology, 13, pp. 495-517; Boehm, B.W., Brown, J.R., Lipow, M., Quantitative evaluation of software quality (1976) ICSE '76: Proceedings of the 2nd international conference on Software engineering, pp. 592-605. , Los Alamitos, CA, USA, IEEE Computer Society Press; Briand, L.C., Labiche, Y., A UML-based approach to system testing (2001) UML '01: Proceedings of the 4th International Conference on The Unified Modeling Language, Modeling Languages, Concepts, and Tools, pp. 194-208. , London, UK, Springer-Verlag; Cherubini, M., Venolia, G., DeLine, R., Ko, A.J., Let's go to the whiteboard: How and why software developers use drawings (2007) CHI '07: Proceedings of the SIGCHI conference on Human factors in computing systems, pp. 557-566. , New York, NY, USA, ACM; Dobing, B., Parsons, J., How UML is used (2006) Commun. ACM, 49 (5), pp. 109-113; Fraikin, F., Leonhardt, T., SeDiTeC-testing based on sequence diagrams (2002) ASE'02: Proceedings of the 17th IEEE international conference on Automated software engineering, p. 261. , Washington, DC, USA, IEEE Computer Society; (1991) IEEE standard computer dictionary : A compilation of IEEE standard computer glossaries, , IEEE Computer Society, Institute of Electrical and Electronics Engineers, New York, NY; Kitchenham, B.A., Pfleeger, S.L., Principles of survey research part 2: Designing a survey (2002) SIGSOFT Softw. Eng. Notes, 27 (1), pp. 18-20; Lange, C.F.J., Chaudron, M.R.V., Muskens, J., In practice: UML software architecture and design description (2006) IEEE Software, 23 (2), pp. 40-46; Murphy, G.C., Notkin, D., Sullivan, K.J., Software reflexion models: Bridging the gap between design and implementation (2001) IEEE Trans. Softw. Eng, 27 (4), pp. 364-380; Nugroho, A., Experiment materials, , http://www.liacs.nl/~anugroho; Nugroho, A., Chaudron, M.R.V., A survey of the practice of design - code correspondence amongst professional software engineers (2007) ESEM, , 0:467-469; Nugroho, A., Chaudron, M.R.V., Managing the quality of UML models in practice (2008) Model-Driven Software Development: Integrating Quality Assurance, , J. Rech and C. Bunse, editors, Idea Group Inc; J. Offutt and A. Abdurazik. Generating tests from uml specifications. UML '99 - The Unified Modeling Language, pages 76-76, 1999; D. J. A. van Opzeeland, C. F. J. Lange, and M. R. V. Chaudron. Quantitative techniques for the assessment of correspondence between UML designs and implementations. 9th ECOOP Workshop on Quantitative Approaches in Object-Oriented Software Engineering, 2005","Nugroho, A.; Leiden Institute of Advanced Computer Science, Niels Bohrweg 1, 2333 CA Leiden, Netherlands; email: anugroho@liacs.nl",,,,"2nd International Symposium on Empirical Software Engineering and Measurement, ESEM 2008","9 October 2008 through 10 October 2008","Kaiserslautern",75651,,9781595939715,,,"English","ESEM: Proc. ACM-IEEE Int. Symp. Empir. Softw. Eng. Meas.",Conference Paper,"Final","",Scopus,2-s2.0-62949180158
"Nugroho A., Chaudron M.R.V.","24477818100;6602727769;","Managing the quality of UML models in practice",2008,"Model-Driven Software Development: Integrating Quality Assurance",,,,"1","36",,7,"10.4018/978-1-60566-006-6.ch001","https://www.scopus.com/inward/record.uri?eid=2-s2.0-47749151820&doi=10.4018%2f978-1-60566-006-6.ch001&partnerID=40&md5=c866837842940bb47524d01e158f9309","Leiden University, Netherlands; Technische Universiteit Eindhoven, Leiden Universties's Institute for Advanced Computer Science (LIACS), Netherlands","Nugroho, A., Leiden University, Netherlands; Chaudron, M.R.V., Leiden University, Netherlands, Technische Universiteit Eindhoven, Leiden Universties's Institute for Advanced Computer Science (LIACS), Netherlands","Many studies have been carried out to investigate what makes up good quality software. Some of the early models that define the quality of software come from Boehm (1976) and McCall (1977). Works in this field of quality models have traditionally focused on quality of the final software product. Since the 1970's models of software have been used and this has recently attracted much attention through the popularity of model-driven software development (MDSD). However, quality of software models has rarely been considered (Lange & Chaudron, 2005). In the software development life cycle, the ability to assure software quality long before the testing phase may save a lot of money since less defects found in the testing phase will mean less effort to be allocated for rework. Currently, the importance of model quality is starting to gain attention from computer scientists. Work in this area has since focused on developing tools, metrics, and frameworks to improve the quality of models that guide implementation, particularly in the context of UML modeling which has become the de facto standard for building object oriented software. Quality of models can be considered from many different perspectives. In this chapter, we will consider the following perspectives: Firstly, is the model complete in the sense that it describes the information that developers need to know about a system? Secondly, we look at the degree in which a model of a system and an implementation correspond. This degree of correspondence indicates to what extent analyses of-or predictions based on the model are valid for the implementation. We present the main findings from case studies into quality of modeling in the software industry as well as findings from a survey amongst professional software developers. We also provide a discussion on the contemporary methods for design quality assessments. © 2009, IGI Global.",,,,,,,,"Abreu, B.F., Melo, W., Evaluating the impact of object-oriented design on software quality (1996) Third International Software Metrics Symposium (METRICS '96), pp. 90-99; Aizenbud-Reshef, N., Nolan, B.T., Rubin, J., Shaham-Gafni, Y., Model traceability (2006) IBM Systems Journal, 45 (3), pp. 515-526; Aleman, J.L.F., Alvarez, A.T., Can intuition become rigorous? Foundations for UML model verification tools (2000) Proceedings of the 11th International Symposium On Software Reliability Engineering, pp. 344-345; Ambler, S.W., (2005) The Elements of UML 2.0 Style, , New York, Cambridge University Press; Antoniol, G., Caprile, B., Potrich, A., Tonella, P., Design-code traceability for object-oriented system (2000) Annals For Software Engineering, 9, pp. 35-58; Aurum, A., Petersson, H., Wohlin, C., State-of-the-art: Software inspection after 25 years (2002) Software Testing Verification and Reliability, 12 (3), pp. 133-154; Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sørumgård, S., The empirical investigation of perspective-based reading (1996) Empirical Software Engineering, 1 (2), pp. 133-164; Boehm, B.W., Brown, J.R., Lipow, M., Quantitative Evaluation Of Software Quality (1976) Proceedings of the 2nd International Conference On Software Engineering, pp. 592-605; Bowen, J.P., Hinchey, M.G., Ten commandments of formal methods (1995) IEEE Computer, 28 (4), pp. 56-63; Briand, L.C., Daly, J., Porter, V., Wüst, J., A comprehensive empirical validation of design measures for object oriented system (1998) Proceedings of the 5th International Software Metrics Symposium, pp. 246-257; Briand, L.C., Wüst, J., Daly, J.W., Porter, D.V., Exploring the relationships between design measures and software quality in object-oriented systems (2000) The Journal of Systems and Software, 51 (3), pp. 245-273; Briand, L.C., Labiche, Y., Penta, M.D., Yan-Bondoc, H.D., An experimental investigation of formality in UML-based development (2005) IEEE Transactions On Software Engineering, 31 (10), pp. 833-849; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Transaction On Software Engineering, 20 (6), pp. 476-493; Clarke, E.M., Wing, J.M., Formal methods: State of the art and future directions (1996) ACM Computing Survey, 28 (4), pp. 626-643; David, A., Möller, M.O., Yi, W., Formal verification of UML statecharts with real-time extensions (2002) Lecture Notes In Computer Science, 2306, pp. 208-241; Dunsmore, A., Roper, M., Wood, M., Systematic object-oriented inspection-an empirical study (2001) Proceedings of the 23rd International Conference On Software Engineering, pp. 135-144; El-Emam, K., Melo, W., Machado, J.C., The prediction of faulty classes using objectoriented design metrics (2001) Journal of Systems and Software, 56 (1), pp. 63-75; Engels, G., Küster, J.M., Heckel, R., Groenewegen, L., A methodology for specifying and analyzing consistency of object-oriented behavioral models (2001) ACM SIGSOFT Software Engineering Notes, 26 (5), pp. 186-195; Engels, G., Heckel, R., Küster, J.M., The consistency workbench: A tool for consistency management in UML-based development (2003) Lecture Notes In Computer Sciences, 2893, pp. 356-359; Fagan, M., Design and code inspection to reduce errors in program development (1976) IBM Systems Journal, 15 (3), pp. 182-211; Fagan, M., Advances in software inspections (1986) IEEE Transactions On Software Engineering, 12 (7), pp. 744-751; Fenton, N.E., (1999) Software Metrics, a Rigorous Approach, , London, Chapman & Hall; Fenton, N.E., Neil, M., Software metrics: Successes, failures, and new directions (1999) Journal of Systems and Software, 47 (2-3), pp. 149-157; France, R., Evans, A., Lano, K., Rumpe, B., The UML as a formal modeling notation (1998) Computer Standards & Interfaces, 19 (7), pp. 325-334; Harrison, R., Counsell, S., Nithi, R., Experimental assessment of the effect of inheritance on the maintainability of object-oriented systems (2000) Journal of Systems and Software, 2 (3), pp. 173-179; Heitmeyer, C.L., On the need for practical formal methods (1998) FTRTFT '98: Proceedings of the 5th International Symposium On Formal Techniques In Real-Time and Fault-Tolerant Systems, pp. 18-26. , London, UK. Springer-Verlag; Lange, C.F.J., Chaudron, M.R.V., Managing model quality in UML-based software development (2005) Proceedings of IEEE Conference On Software Technology and Engineering Practice 2005 (STEP), pp. 7-16; Lange, C.F.J., Dubois, B., Chaudron, M.R.V., Experimentally investigating the effectiveness and effort of modeling conventions for the UML (2005) Lecture Notes In Computer Science, 4364, pp. 91-100; Laitenberger, O., A survey of software inspection technologies (2002) Handbook On Software Engineering and Knowledge Engineering, , World Scientific Publishing; Laitenberger, O., Beil, T., Schwinn, T., An industrial case study to examine a non traditional inspection implementation for requirements specifications (2002) Empirical Software Engineering, 7 (4), pp. 345-374; Leung, F., Bolloju, N., Analyzing the quality of domain models developed by novice systems analysts (2005) Proceedings of the 38th Hawaii International Conference On System Sciences, , 188b-188b; Lindland, O.I., Sindre, G., Sølvberg, A., Understanding quality in conceptual modeling (1994) IEEE Software, 11 (2), pp. 42-49; McCall, J.A., Richards, P.K., Walters, G.F., (1977) Factors In Software Quality, 1-3. , vol, of AD/A-049-015/055. Springfield; McUmber, W.E., Cheng, B., A general framework for formalizing UML with formal languages (2001) Proceedings of the 23rd International Conference On Software Engineering (ICSE '01), pp. 433-442; Mellor, S.J., Clark, A.N., Futagami, T., Model-driven development - Guest editor's introduction (2003) IEEE Software, 20 (5), pp. 14-18; Murphy, G.C., Notkin, D., Sullivan, K.J., Software reflexion models: Bridging the gap between design and implementation (2001) IEEE Transactions On Software Engineering, 27 (4), pp. 364-380; Opzeeland, D.J.A., (2005) Automated Techniques For Reconstructing and Assessing Correspondence Between UML Designs and Implementations, , Unpublished master thesis, Technische Universiteit Eindhoven, Eindhoven, The Netherlands; Parnas, D.L., Weiss, D.M., Active design review: Principles and practices (1985) Proceedings of the 8th International Conference On Software Engineering, pp. 132-136; Pfleeger, S.L., Hatton, L., Investigating the influence of formal methods (1997) IEEE Computer, 30 (2), pp. 33-43; Pilskalns, O., Andrews, A., Knight, A., Ghosh, S., France, R., Testing UML designs (2007) Information and Software Technology, 49 (8), pp. 892-912; Porter, A.A., Siy, H.P., Toman, C.A., Votta, L.G., An experiment to assess the cost-benefits of code inspections in large scale software development (1997) IEEE Transactions On Software Engineering, 23 (6), pp. 329-346; Runeson, P., Isacsson, P., Software quality assurance - Concept and misconception (1998) Proceedings of the 24th. EUROMICRO Conference (EUROMICRO'98), 2, pp. 853-859; Sefika, M., Sane, A., Campbell, R.H., Monitoring compliance of a software system with its high-level design models (1996) Proceedings of the 18th International Conference On Software Engineering, pp. 387-396; Traore, L., Aredo, D.B., Enhancing structured review with model-based verification (2004) IEEE Transactions On Software Engineering, 30 (11), pp. 736-753; Tvedt, R.T., Costa, P., Lindvall, M., Does the code match the design? (2002) Proceedings of the International Conference On Software Maintenance (ICSM), pp. 393-401; Wing, J.M., A specifier's introduction to formal methods (1990) IEEE Computer, 23 (9), pp. 8-24","Leiden UniversityNetherlands",,,"IGI Global",,,,,,9781605660066,,,"English","Model-Driven Software Devmt.: Integrating Qual. Assur.",Book Chapter,"Final","All Open Access, Green",Scopus,2-s2.0-47749151820
"Nugroho A., Lange C.F.J.","24477818100;57197436989;","On the relation between class-count and modeling effort",2008,"Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","5002 LNCS",,,"93","104",,1,"10.1007/978-3-540-69073-3_11","https://www.scopus.com/inward/record.uri?eid=2-s2.0-47749116533&doi=10.1007%2f978-3-540-69073-3_11&partnerID=40&md5=95c19b92ae494c1964e835871fe93d09","LIACS, Leiden University, Niels Bohrweg 1, Leiden 2333 CA, Netherlands; Technische Universiteit Eindhoven, P.O. Box 513, Eindhoven 5600 MB, Netherlands","Nugroho, A., LIACS, Leiden University, Niels Bohrweg 1, Leiden 2333 CA, Netherlands; Lange, C.F.J., Technische Universiteit Eindhoven, P.O. Box 513, Eindhoven 5600 MB, Netherlands","The knowledge of size of models can be very useful to perform many kinds of estimations such as effort, cost, and productivity in software development. However, to the best of our knowledge there is no universally accepted model size measure available to date. In this paper we investigate the usefulness of class-count as a size measure of models (represented with the UML). Using empirical data collected from two student experiments we validate this measure by assessing its correlation with effort spent in modeling. The results show that merely using class-count might not provide sufficient and accurate estimation of modeling effort. Furthermore, we identify some factors that hinder class-count as a good estimate of modeling effort. © 2008 Springer-Verlag Berlin Heidelberg.","Experiment; Model Size; Modeling Effort; UML","Artificial intelligence; Bioinformatics; Computer science; Models; Software engineering; Unified Modeling Language; Accurate estimation; Empirical data; Heidelberg (CO); Lecture Notes; Model size; Size measuring; Software development; Student experiments; Estimation",,,,,,"Emam, K.E., Benlarbi, S., Goel, N., Melo, W., Lounis, H., Rai, S.N., The optimal class size for object-oriented software (2002) IEEE Trans. Softw. Eng, 28 (5), pp. 494-509; Dobing, B., Parsons, J., How UML is used (2006) Communications of the ACM, 49 (5), pp. 109-113; Vicinanza, S.S., Mukhopadhyay, T., Prietula, M.J., Software-effort estimation: An exploratory study of expert performance (1991) Information Systems Research, 2 (4), pp. 243-262; Caldiera, G., Antoniol, G., Fiutem, R., Lokan, C., Definition and experimental evaluation of function points for object-oriented systems (1998) METRICS 1998: Proceedings of the 5th International Symposium on Software Metrics, p. 167. , Washington, DC, USA, p, IEEE Computer Society, Los Alamitos; Albrecht, A., Measuring application development productivity (1979) IBM Application Development Symp, pp. 83-92. , Press. I.B.M, ed, October; Fetcke, T., Abran, A., Nguyen, T.H., Mapping the OO-Jacobson approach into function point analysis (1997) TOOLS 1997: Proceedings of the Tools-23: Technology of Object-Oriented Languages and Systems, p. 192. , Washington, DC, USA, p, IEEE Computer Society, Los Alamitos; Whitmire, S.A.: An introduction to 3D function points. Softw. Dev. 3(4). 43-53 (1995); Minkiewicz, A., Measuring object oriented software with predictive object points (1997) Applications in Software Measurements, , ASM; Costagliola, G., Ferrucci, F., Tortora, G., Vitiello, G., Class point: An approach for the size estimation of object-oriented systems. Software Engineering (2005) IEEE Transactions, 31 (1), pp. 52-74; Nugroho, A., Experiment materials, , http://www.liacs.nl/~anugroho; Lange, C.F.J., DuBois, B., Chaudron, M.R.V., Demeyer, S.: An experimental investigation of uml modeling conventions. In: Nierstrasz, O., Whittle, J., Harel, D., Reggio, G. (eds.) MoDELS 2006. LNCS, 4199, pp. 27-41. Springer, Heidelberg (2006); Lange, C.F.J., Experiment replication package, , http://www.tue.nl/~clange; T.C.U. of Hongkong: Minimum significant correlation coefficient r for a sample size, , http://department.obg.cuhk.edu.hk/researchsupport, Hongkong; Lange, C.F.J., Chaudron, M.R.V., Muskens, J., In practice: UML software architecture and design description (2006) IEEE Softw, 23 (2), pp. 40-46; Nugroho, A., Chaudron, M.R.V., Managing the quality of uml models in practice (2008) Model-Driven Software Development: Integrating Quality Assurance, , Rech, J. Bunse, C, eds, Idea Group Inc, to appear","Nugroho, A.; LIACS, Niels Bohrweg 1, Leiden 2333 CA, Netherlands; email: anugroho@liacs.nl",,"ACM Special Interest Group on Software Engineering;IEEE Computer Society",,"Models in Software Engineering, MoDELS 2007","30 September 2007 through 5 October 2007","Nashville, TN",72690,03029743,3540690697; 9783540690696,,,"English","Lect. Notes Comput. Sci.",Conference Paper,"Final","",Scopus,2-s2.0-47749116533
"Nugroho A., Chaudron M.R.V.","24477818100;6602727769;","A Survey of the practice of design - Code correspondence amongst professional software engineers",2007,"Proceedings - 1st International Symposium on Empirical Software Engineering and Measurement, ESEM 2007",,, 4343781,"467","469",,14,"10.1109/ESEM.2007.12","https://www.scopus.com/inward/record.uri?eid=2-s2.0-47949133656&doi=10.1109%2fESEM.2007.12&partnerID=40&md5=631ec79e835354ab474f30c815aebfa4","Leiden Institute of Advanced Computer Science, Leiden University, Netherlands; Department of Maths and Computer Science, Technische Universiteit Eindhoven, Netherlands","Nugroho, A., Leiden Institute of Advanced Computer Science, Leiden University, Netherlands; Chaudron, M.R.V., Leiden Institute of Advanced Computer Science, Leiden University, Netherlands, Department of Maths and Computer Science, Technische Universiteit Eindhoven, Netherlands","Correspondence between the design and the code of a system is desirable for several purposes in software development, such as predicting properties of the system based on the design, and for using the documentation for understanding and maintaining the system. In this paper we report on a study into the correspondence between the design of a software system, represented by means of UML, and the implementation of the system. We performed a web-based questionnaire among professional software engineers for finding out how they deal with correspondence. The questionnaire elicited the attitude of professional software engineers with respect to: importance of correspondence, common practice in maintaining correspondence and common reasons for deterioration of correspondence. The results of the questionnaire provide a deeper understanding of the aspects of correspondence and their importance in practical software engineering. © 2007 IEEE.",,"Codes (standards); Codes (symbols); Computer software; Engineering; Optical engineering; Professional aspects; Software design; Software engineering; Technology; Unified Modeling Language; Empirical software engineering; International symposium; Professional software; Software development; Software systems; Web-based questionnaire; System program documentation",,,,,,"Tvedt, R.T., Costa, P., Lindvall, M., Does the Code Match the Design? (2002) Proceedings of the International Conference on Software Maintenance (ICSM), , IEEE Computer Society; Fiutem, R., Antoniol, G., Identifying Design-Code Inconsistencies in Object-Oriented Software: A Case Study (2002) Proceedings of the International Conference on Software Maintenance (ICSM), , IEEE Computer Society; D. Luckham, F. von Henke, B. Krieg-Bruckner, and O. Owe. Anna, A language for annotating Ada programs: Reference manual, Lecture Notes on Computer Science, 260, Springer-Verlag, Berlin, Germany, 1987; Meyers, S., Duby, C.K., Reiss, S.P., Constraining the structure and style of object-oriented programs (1993), Technical Report CS-93-12, Brown University; Murphy, G.C., Notkin, D., Sullivan, K., Software reflexion models: Bridging the gap between design and implementation (2001) IEEE Transactions on Software Engineering, pp. 364-380. , IEEE Press; Sefika, M., Sane, A., Campbell, R.H., Monitoring compliance of a software system with its high-level design models (1996) Proceedings of the International Conference on Software Engineering, pp. 387-396; Nugroho, A., Chaudron, M.R.V., A Survey on the Use of UML in Software Development, , http://www.liacs.nl/∼anugroho/umlsurvey.pdf, survey questionnaire; Lange, C.F.J., Chaudron, M.R.V., Effects of defects in UML models: An experimental investigation (2006) Proceeding of the 28th International Conference on Software Engineering (ICSE), , ACM Press","Nugroho, A.; Leiden Institute of Advanced Computer Science, Netherlands",,"IEEE Computer Society;Microsoft Research;SigSoft;Universidad Politecnica Madrid;Ministerio de Educacion Y Ciencia",,"1st International Symposium on Empirical Software Engineering and Measurement, ESEM 2007","20 September 2007 through 21 September 2007","Madrid",72768,,0769528864; 9780769528861,,,"English","Proc. - Int. Symp. Empir. Softw. Eng. Meas., ESEM",Conference Paper,"Final","",Scopus,2-s2.0-47949133656
