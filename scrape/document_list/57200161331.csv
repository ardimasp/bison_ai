Authors,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Manufacturers,Funding Details,Funding Text 1,References,Correspondence Address,Editors,Sponsors,Publisher,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Publication Stage,Open Access,Source,EID
"Meiliana, Septian I., Alianto R.S., Daniel","55758663300;57200161295;57200161331;56179743800;","Comparison Analysis of Android GUI Testing Frameworks by Using an Experimental Study",2018,"Procedia Computer Science","135",,,"736","748",,4,"10.1016/j.procs.2018.08.211","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85053103532&doi=10.1016%2fj.procs.2018.08.211&partnerID=40&md5=c9e9385c696d8221cf51d56d796ee2de","Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Meiliana, Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Septian, I., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Alianto, R.S., Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia; Daniel, Computer Science Department, School of Computer Science, Bina Nusantara University, Jakarta, 11480, Indonesia","Android is the most popular mobile operating systems on the market share in 2nd Quarter 2017 Android operating system get 87.7% of mobile operating system on the market share. The mobile device Graphical user interfaces (GUI) are one of the main components to be tested for quality assurance. GUI testing is important since they often make up for half of the resource code of the application and GUI is used to interact with the application. Automating these tests is very useful since it saves a lot of time and money. However, the tools or frameworks that are available for automating the tests are often not suitable for developer needs, mainly because of the lack of functionality. Therefore, automated testing framework evaluation is needed. With a comparison study provided, developers will able to consider about testing framework that can fit their needs easily. In this study, we selected top 4 most used Android GUI testing frameworks that will be evaluated by using experimental study. Those frameworks are: Espresso, Appium, Calabash and UI Automator. We also selected the criteria used in this study to evaluate those frameworks. We selected those criteria by identified the best criteria to testing Android application base on our literature analysis. Furthermore, the study resulted in characterization of those frameworks from experiment of a simple Android application. © 2018 The Authors. Published by Elsevier Ltd.","android testing; automated testing; gui testing; testing framework","Artificial intelligence; Commerce; Competition; Graphical user interfaces; Mobile devices; Quality assurance; Android applications; Automated testing; Comparison analysis; Graphical user interfaces (GUI); GUI testing; Literature analysis; Mobile operating systems; Testing framework; Android (operating system)",,,,"Google","UI Automator is a UI testing framework suitable for cross-app functional UI testing across system and installed apps. UI Automator comes with the Android SDK and supported by Google Inc. This framework only supports native application and not hybrid application. UI Automator is a part of the standard Android SDK and developers able to use it without installation. Version 2.0 available was used in this study.","Chris, W., Sean, O., Nick, S., (2017) The 10 Biggest Announcements from Google I/O 2017, , https://www.theverge.com/2017/5/17/15654432/google-io-2017-keynote-highlights-news-announcements-recap, The Verge (May 17). Cited 2018 Jan 9; (2018) Number of Available Applications in the Google Play Store from December 2009 to June 2018, , https://www.statista.com/statistics/266210/number-of-available-applications-in-the-google-play-store/, Statista.com June Statista, The Statistic Portal. Cited 2018 Jan 2; Ammann, P., Offutt, J., (2016) Introduction to Software Testing., , Cambridge University Press; Peng, W., Bin, L., Wei, Y., Jingzhe, L., Wenchang, S., Automatic Android GUI Traversal with High Coverage (2014) Communication Systems and Network Technologies (CSNT), 2014 Fourth International Conference on, pp. 1161-1166; Singh, S., Gadgil, R., Chudgor, A., Automated Testing of mobile applications using scripting Technique: A study on Appium (2014) International Journal of Current Engineering and Technology (IJCET), 4 (5), pp. 3627-3630; Kulkarni, M.K., Soumya, A., Deployment of Calabash Automation Framework to Analyze the Performance of an Android Application (2016) Journal for Research| Volume, 2 (3); Griebe, T., Hesenius, M., Gesthüsen, M., Gruhn, V., Test Automation for Speech-Based Applications (2016) SoMeT, pp. 85-100; Zheng, H., Li, D., Liang, B., Zeng, X., Zheng, W., Deng, Y., Xie, T., Automated test input generation for android: Towards getting there in an industrial case (2017) Proceedings of the 39th International Conference on Software Engineering: Software Engineering in Practice Track, pp. 253-262. , IEEE Press; Hu, Y., Azim, T., Neamtiu, I., Versatile yet lightweight record-and-replay for android (2015) ACM SIGPLAN Notices, 50 (10), pp. 349-366. , ACM; Fazzini, M., Freitas, E.N.D.A., Choudhary, S.R., Orso, A., (2016) From Manual Android Tests to Automated and Platform Independent Test Scripts, , arXiv preprint arXiv:1608.03624; Gunasekaran, S., Bargavi, V., Survey on automation testing tools for mobile applications (2015) International Journal of Advanced Engineering Research and Science, 2 (11), pp. 2349-6495; Kropp, M., Morales, P., Automated GUI Testing on the Android Platform (2010) Proceedings of the 22nd IFIP International Conference on Testing Software and Systems: Short Papers, pp. 67-72. , Montreal: CRIM; Börjesson, E., Feldt, R., Automated system testing using visual GUI testing tools: A comparative study in industry (2012) Proceedings - IEEE 5th International Conference on Software Testing, Verification and Validation, ICST, pp. 350-359. , art. nr. 6200127","Meiliana; Computer Science Department, Indonesia; email: meliana@binus.edu","MeilianaArifin Y.Budiharto W.Wulandhari L.A.Sutoyo R.FaisalGunawan A.A.S.WilliemSuryani D.",,"Elsevier B.V.","3rd International Conference on Computer Science and Computational Intelligence, ICCSCI 2018","7 September 2018 through 8 September 2018",,138963,18770509,,,,"English","Procedia Comput. Sci.",Conference Paper,"Final","All Open Access, Gold",Scopus,2-s2.0-85053103532
"Meiliana, Septian I., Alianto R.S., Daniel, Gaol F.L.","55758663300;57200161295;57200161331;56179743800;24536664300;","Automated Test Case Generation from UML Activity Diagram and Sequence Diagram using Depth First Search Algorithm",2017,"Procedia Computer Science","116",,,"629","637",,7,"10.1016/j.procs.2017.10.029","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040007699&doi=10.1016%2fj.procs.2017.10.029&partnerID=40&md5=b64a1b02f1b545589b81452877d2976b","Computer Science Department, School of Computer Science, Bina Nusantara University, DKI, Jl. K. H. Syahdan No. 9, Jakarta, 11480, Indonesia; Doctor of Computer Science, Bina Nusantara University, DKI, Jl. Kebon Jeruk Raya No.27, Jakarta, 11530, Indonesia","Meiliana, Computer Science Department, School of Computer Science, Bina Nusantara University, DKI, Jl. K. H. Syahdan No. 9, Jakarta, 11480, Indonesia, Doctor of Computer Science, Bina Nusantara University, DKI, Jl. Kebon Jeruk Raya No.27, Jakarta, 11530, Indonesia; Septian, I., Computer Science Department, School of Computer Science, Bina Nusantara University, DKI, Jl. K. H. Syahdan No. 9, Jakarta, 11480, Indonesia; Alianto, R.S., Computer Science Department, School of Computer Science, Bina Nusantara University, DKI, Jl. K. H. Syahdan No. 9, Jakarta, 11480, Indonesia; Daniel, Computer Science Department, School of Computer Science, Bina Nusantara University, DKI, Jl. K. H. Syahdan No. 9, Jakarta, 11480, Indonesia; Gaol, F.L., Doctor of Computer Science, Bina Nusantara University, DKI, Jl. Kebon Jeruk Raya No.27, Jakarta, 11530, Indonesia","Software testing is an important and critical activity in software development that deals with software quality. However, the testing process is consuming activities that need to be automated to save a lot of resources. Towards automated testing, automating test cases generation as the first testing process is being highlighted. This research aims to generate test case automatically from UML diagram since model based testing that conducted on early phase of software development process show higher efficiency. UML diagrams used in this research are activity diagram, sequence diagram and SYTG as the combination graph. These three diagrams have been proved as the most compatible diagram to generate test case from previous research. Method proposed in this paper is Depth First Search algorithm that is modified to generate expected test cases. This paper proves that modified DFS algorithm applied to generate test case is provide accurate result, every node presented on the test case, include any condition (alt and opt). Comparison result from three different test cases generated shows that test cases from combined UML may not necessarily result in better test cases, due to the possibility of redundant test cases for some test cases. This paper also presenting an experiment result that proving sequence diagrams can produce better test cases.","depth first search algorithm; software testing; test cases; test cases generator; UML diagram","Artificial intelligence; Automation; Computer software; Computer software selection and evaluation; Learning algorithms; Model checking; Software design; Software engineering; Testing; Automated test case generation; Depth first search algorithms; Model based testing; Software development process; Test case; Test cases generation; UML activity diagrams; UML diagrams; Software testing",,,,,,"Hanthi, V.K., MohanKumar, G., A Novel Approach for Automated Test Path Generation using TABU Search Algorithm (2012) International Journal of Computer Applications, 48 (13), pp. 28-34; Srivastaval, J., Dwivedi, T., (2015) Software Testing Strategy Approach on Source Code Applying, 6 (3), pp. 25-31; Alazzam, I., Alsmadi, I., Akour, M., (2014) Test Cases Selection Based on Source Code Features Extraction, 8 (1), pp. 203-214; Tripathy, A., Mitra, A., Test case generation using activity diagram and sequence diagram (2013) Proceedings of International Conference on Advances in Computing, pp. 121-129. , Springer; Faria, J.P., Paiva, A.C.R., Yang, Z., Test generation from UML sequence diagrams (2012) Proceedings - 2012 8th International Conference on the Quality of Information and Communications Technology, QUATIC, 2012, pp. 245-250; Swain, R.K., Panthi, V., Behera, P.K., (2013) Generation of Test Cases Using Activity Diagram; Panthi, V., (2012) Automatic Test Case Generation Using Sequence Diagram, 2 (4), pp. 22-29; Hettab, A., Chaoui, A., Aldahoud, A., (2013) Automatic Test Cases Generation from Uml Activity Diagrams Using Graph; Sumalatha, V.M., Object Oriented Test Case Generation Technique using Genetic Algorithms (2013) International Journal of Computer Applications, 61 (20); Asad, S., Shah, A., Shahzad, R.K., Shafique, S., Bukhari, A., Humayun, M., (2016) Automated Test Case Generation Using UML Class & Sequence Diagram, 15 (3), pp. 1-12; Khurana, N., Chillar, R.S., Test Case Generation and Optimization using UML Models and Genetic Algorithm (2015) Procedia Computer Science [Internet], 57, pp. 996-1004. , http://dx.doi.org/10.1016/j.procs.2015.07.502","Meiliana; Computer Science Department, Jl. K. H. Syahdan No. 9, Indonesia; email: meiliana@binus.edu","Budiharto W.Suryani D.Wulandhari L.A.Chowanda A.Gunawan A.A.S.Hanafiah N.Ham H.Meiliana","","Elsevier B.V.","2nd International Conference on Computer Science and Computational Intelligence, ICCSCI 2017","13 October 2017 through 14 October 2017",,139148,18770509,9781510849914,,,"English","Procedia Comput. Sci.",Conference Paper,"Final","All Open Access, Gold",Scopus,2-s2.0-85040007699
